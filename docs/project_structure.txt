--- Folder Structure ---
[agent_configs]
    ├── [__pycache__]
        ├── fixed_strategy_agent_configs.cpython-310.pyc
        ├── human_agent_config.cpython-310.pyc
        └── llm_agent_configs.cpython-310.pyc
    ├── fixed_strategy_agent_configs.py
    ├── human_agent_config.py
    └── llm_agent_configs.py
[data]
    ├── [datasets]
        └── sim-hard-majority-vs-soft-majority-2024-05-07-23-10.csv
    ├── [graphs]
        └── Hard_Majority_vs_Soft_Majority.png
    └── [llm_message_history]
[docs]
    └── .project_structure_ignore
[helper_functions]
    ├── [__pycache__]
        ├── fixed_strategies.cpython-310.pyc
        ├── plot_strategy_score.cpython-310.pyc
        ├── plot_strategy_scores.cpython-310.pyc
        ├── sanitize_file_name.cpython-310.pyc
        └── save_message_history.cpython-310.pyc
    ├── fixed_strategies.py
    ├── plot_strategy_score.py
    ├── sanitize_file_name.py
    └── save_message_history.py
[models]
    ├── [__pycache__]
        └── agent_config.cpython-310.pyc
    └── agent_config.py
[prompts]
    ├── [__pycache__]
        ├── choice_promp_with_reasoning.cpython-310.pyc
        ├── choice_prompt.cpython-310.pyc
        ├── choice_prompt_with_reasoning.cpython-310.pyc
        ├── choice_prompt_without_reasoning.cpython-310.pyc
        ├── game_description.cpython-310.pyc
        └── selfish_system_message.cpython-310.pyc
    ├── choice_prompt_with_reasoning.py
    ├── choice_prompt_without_reasoning.py
    ├── game_description.py
    └── [personalities]
        ├── [__pycache__]
            ├── altruistic_personality_message.cpython-310.pyc
            ├── custom_personality_message.cpython-310.pyc
            └── selfish_personality_message.cpython-310.pyc
        ├── altruistic_personality_message.py
        ├── custom_personality_message.py
        └── selfish_personality_message.py
[scripts]
    ├── llm_log.txt
    ├── multiple_sims.py
    └── single_sim.py
to-do.md
[utils]
    ├── __init__.py
    ├── [__pycache__]
        ├── __init__.cpython-310.pyc
        ├── agent.cpython-310.pyc
        ├── agent_configs.cpython-310.pyc
        ├── fixed_strategies.cpython-310.pyc
        └── simulation.cpython-310.pyc
    ├── agent.py
    └── simulation.py

--- File Contents ---

--- File: .git/COMMIT_EDITMSG ---
v 0.1


--- File: .git/FETCH_HEAD ---
a022151633fb6a86ecac0d409a61df65b58a287f		branch 'master' of https://github.com/jaco4873/LLM-Human-FixedStrategy-Prisoners-Dilemma


--- File: .git/HEAD ---
ref: refs/heads/master


--- File: .git/config ---
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true
[remote "origin"]
	url = https://github.com/jaco4873/LLM-Human-FixedStrategy-Prisoners-Dilemma.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master


--- File: .git/description ---
Unnamed repository; edit this file 'description' to name the repository.


--- File: .git/hooks/applypatch-msg.sample ---
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--- File: .git/hooks/commit-msg.sample ---
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--- File: .git/hooks/fsmonitor-watchman.sample ---
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--- File: .git/hooks/post-update.sample ---
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--- File: .git/hooks/pre-applypatch.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--- File: .git/hooks/pre-commit.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--- File: .git/hooks/pre-merge-commit.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--- File: .git/hooks/pre-push.sample ---
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--- File: .git/hooks/pre-rebase.sample ---
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--- File: .git/hooks/pre-receive.sample ---
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--- File: .git/hooks/prepare-commit-msg.sample ---
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--- File: .git/hooks/push-to-checkout.sample ---
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--- File: .git/hooks/update.sample ---
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--- File: .git/index ---
DIRC      f4�	r�f4�	r�  ���  ��  �     h���!�׶wpX�L4<�&	 
.gitignore        f6>���f6>���  ��|  ��  �     ��^��	����
��֧� -agent_configs/fixed_strategy_agent_configs.py     f6$)]F�f6$)]F�  ���  ��  �      x��������/�Ͳ��s�V #agent_configs/human_agent_config.py       f6#� �3f6#� �3  ��N  ��  �     ��v�Cg/�R��cFw+O�e)* "agent_configs/llm_agent_configs.py        f6*n
?��f6*n
?:�  �͓  ��  �       �⛲��CK�)�wZ���S� docs/.project_structure_ignore    f6*����f6*����  �͔  ��  �     qhWl�Dx�]����jd8@ docs/project_structure.txt        f6=�z+if6=�z+i  ��H  ��  �     ��x^E���i�Ou�
?�'ݹK1 $helper_functions/fixed_strategies.py      f6<�_nf6<t*�y0  ��  ��  �     p���A��n��~�9)�>� (helper_functions/plot_strategy_scores.py  f61�:ёf61�:ё  ��*  ��  �      [e�Ԓo޿<�T����s�xL &helper_functions/sanitize_file_name.py    f6� T�xf6� T�x  �3�  ��  �     �iB|���������x��g�f? models/agent_config.py    f*�)�_f*�)�_  �ZG  ��  �      �X��U�<�W=���G^�L3 prompts/choice_prompt.py  f3D �f3D �  �U*  ��  �     U�`n(@��X�֖��d�sM| prompts/game_description.py       f4)y�gf4&f�  ���  ��  �      ~`\[R��0�:��wM�V��# 7prompts/personalities/altruistic_personality_message.py   f41�f3�$-P>^  ��U  ��  �      ^���O&�L�*}1n�?�}�%� 3prompts/personalities/custom_personality_message.py       f4,,V�f4�-  �jx  ��  �      fCW{$��|��R�����Ë� 4prompts/personalities/selfish_personality_message.py      f6=�)�f6=�)�  ��  ��  �     &�%���8<K4O��e=)C� scripts/multiple_sims.py  f6=S��\f6=S��\  ��i  ��  �     W���tQS�Ty�gC-T��fR[ scripts/single_sim.py     f6�5�{�f6�5�{�  �y$  ��  �      �NU�aj��"9��q�(���T� to-do.md  f6*6�;�f6*6�;�  ��  ��  �       �⛲��CK�)�wZ���S� utils/__init__.py f6�$<If6�$<I  ���  ��  �     �颙scc��p�B�'��%U� utils/agent.py    f6��u��f6��u��  ��   ��  �     ���+MAJ�7-YE(��';X utils/simulation.py       TREE  ) 21 7
���Y���ݞ�LcyEv'7Edocs 2 0
F���c�SKh��ʙ���Putils 3 0
���Od6Ƴ��	��ן���models 1 0
�9��m��e�nvc�Hq���prompts 5 1
`$�[�=��Q.w�D{��>personalities 3 0
��J��(<�t���g.0scripts 2 0
A�"yE��Vl��
�oagent_configs 3 0
�i�|Z-~N*���C���Nhelper_functions 3 0
¾I�f�8�N��
��3�G�O)�r�`����ޯ�	{�

--- File: .git/info/exclude ---
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--- File: .git/logs/HEAD ---
0000000000000000000000000000000000000000 a022151633fb6a86ecac0d409a61df65b58a287f jaco4873 <124041503+jaco4873@users.noreply.github.com> 1714856010 +0200	commit (initial): v 0.1


--- File: .git/logs/refs/heads/master ---
0000000000000000000000000000000000000000 a022151633fb6a86ecac0d409a61df65b58a287f jaco4873 <124041503+jaco4873@users.noreply.github.com> 1714856010 +0200	commit (initial): v 0.1


--- File: .git/logs/refs/remotes/origin/master ---
0000000000000000000000000000000000000000 a022151633fb6a86ecac0d409a61df65b58a287f jaco4873 <124041503+jaco4873@users.noreply.github.com> 1714856053 +0200	update by push


--- File: .git/objects/01/41802279451aa5e8af560e6c9abf0a16fd7f6f ---
x+)JMU�0e040031Q�-�)�,�I�/��-�+�d8�zQzg�����������R��/�j�3��!*A
�n�T��5��z��nȽCiA� �"�

--- File: .git/objects/19/f9165e1bba9d09fc8ae5d70aa0ef8703d6a7a5 ---
x��=O�0���+���TUb@��C�n���J�Ⱦ���c;v��HV��|�����C!�����&W�$��x�7L�
�QV9e-�����P�rO����ySd�79��jT� �ßw	1�\*���Et�k8�l4�hR��gϹcR�+
g>���y��=U(()*�+bŅ�ڼW��!�������2GZ�� C��T6�)Ve����7��H��t�6�j-L�^4C�@�C�;++V��jHޥ"{���3�+��9u���´�Ê�.C����#��L������$3��Y�h�kEZ.&�-t,IC�.�b��%���ח�"m?�
�iV�p�b�3�dߍ�<�b��I��wn���ɟGӜ��҈J�?��[��L
c���*& 5��˯�y�+�_�����̅�+��vm��V�B�G,�K=�}�����vC�*��

--- File: .git/objects/43/577b2480947cd0148652b0a70b8fb2fcc38bd4 ---
x-�1�0�<e;:��!��p�틼  ����	����AM�q�Z�E�-G���I�F��R��₊��Ѽ�}Mb�#�n�~��^�p�ms�l(D

--- File: .git/objects/46/e09fa26391534b68edf4ca99bbe48511805018 ---
x+)JMU040b040031Q�+(��JM.�/.)*M.)-J��L��/Jex6���M�9{wk�+��q�IO�D�&=z%%�9g]*�e�Ǟa�;�mV��� ]	,S

--- File: .git/objects/4e/55bb616a89992239dbf071d62884c81af054e7 ---
xM�;1C�9�O�����q ���%�(3)�=��β��|��~��3��܌�p�W g�R�&���	�a��D���B�]�Z��V�j�ߙ�0�
��+���j��d�␁0դ�=`�>g�FF]�q�G�%D�u�\��G

--- File: .git/objects/57/1d6ccd4478071ce75dcc039d95ed6a64384018 ---
x�]ms�ȑ�����D튠�^o%J�:�m���Y�M�� �5	0 (�q\u?"�����t�$HI^�T�	z�{�}z��<�o~s��7������|>I
s^�q�*���h�V�,ˋ�sϒ���l���w���������f�~H&ò*�*������r�1�r���Ơz�?-��|�Qr��$�b7�)���,�W��=znH�,�qE���#�2�/�b8]e�*ͳ�G������'��uL���q<�L�CER�������2���ecˡ֡$,�խ�t(�/�t����9��8��p���"]�{q���|����r]V�b�H���>X�K�-�BÏp�^`��<���Ĳ�IJ�j4��s�CZV�xX�[論 �в*�|� -��wA���,�n�rc�m0�*/[ҹ��l[������J�Ty�G�I�bU��5�YZ
�5'���p�֪U��u��3�qb���CS���;(e�X�cQ0��#�7�'�I�U����/��˝{��J�c�<51�C[����ӗ/a��I�	�Ѡ�и�w���s����,;�{�I>`Ғ��ʜ�B)�t�E�3�_����,�f��L�Vg�J�Ag�\%�|�Of���~���<�'���#�3OG�~}������
�K}�*.���6�.�"X��.~E�4��N�fe�Ax4�΀2nu^��~����["�~aG�f~,W�6�eR&��)�u�V ܌�&6:�QA6SX[\�=[b�B%S�����&G��M���I3:g�r�.pe���͛U�� �)�_&c��6�eeg�.�tjՇJ>��$X��2-����y���x�G�	�-+,�8�J
�)�e6w.����*��ߙ�v�:��}��t_�,/1WY�чż����W:��#�Ӊ.�K�Y�X>\@}v@��qV��S�9A�H��q6�MY���c\ٝy>��C�QA���NFQ�7���a����9_p�"��A!��	0�NF���*�J����x�vc#,;����2�>�4Qt=.C+�t�~L�O
R+�p��\��y�W�(��Cf��l4o��9�@T�ř*�3�w�� ��l��It�N�+�5��
H'T������O��:_�E:���u�A" n�5��L�[��Ĥ� RI6��C��V#U�K�%L�yF���5"��i��� �Z`�1�p��@iQ�t�?��b��$��2@�q�ޣ����\ ��k�ɢ\�+`y�.�#���=q�@ڳ�������� �̌ch{>ŀ�<�L��L�e|E����E�
�Nӱ�$@f�dc�dk�]��'�܌��,��)WK�ڑQz�"^1S
(`UÐgX��x�i2h��= ke�$!B@b�am�T�Z>�����r\�;�Q���ߥ���޷�=\�D8�
�4�4�LZ�k��|֨�'�q:J���#g[0� �\�<�*�Cx*䌻u�jY�{�H��l :
=O����=�K�>T���@�N�R�G�a^T�s/���v��2��,�pui��T��~����_��}M�V*�t#P3<��s~/�i������N����ұP�(G�>��* P]��L����9{vf�����Ѓ&�,2�/W#8���)tl��
�G,�t�_ˊc �o�ೄ+Np�C1�O�� N�:c�2J�_��LV�$�-�	Q;�⿊�K�`A�4���ukI���8EW���~t���	�Kv���zM?q�嚙���8Ձ#�
{]���x�M�LZ�)p9�xO9�p?�N��-���{�&���T�|�س5t�ZcR���X�h���2Ç����xS�/�Fh���r���3V�$e���	B6Q�?&��Ai�Mu1��:nU����:��$�]���8-�`V�0�NVAҏ�Q�1��1`�1�����e¥	��O��a87��(��}�-�w"� L+rΘV�d��<�%�d@�йG%,�xhN�z��98iL8��ʯ�c�]6o�P�@�b��x�F�
�	d�.�I�v5Fr	q���O�tAOfN	�jOG�nJ��,���ɞ�2*�m0�C�ؑ�+�\��4_���:K�[�!,�);"O�ҫ�e��y�s���:+����lƸ@����Dpݣ��˓�خ���Χ�p��#_�����5ķ�6��C�k���<e��䝎G:���eNB�++3eN�oa�C��U�H�E���te1���¬O�9�D�2�4��_<�و��L�ZW�&����Ǩu^"t��݄�S'���I��#y.D�/������Kx�S���(;1��ٿ�J"�����,�uS�o��T4Zh5�n�o�&l�Q����3[�����DZ��8�`�ʚ��Mޘ�7��M�6�3'n�É7l�MS����,ߘ��;�~Ӽ����tδ�Ƿ��ٳw0�]��u��K�Z(]"���&�(�A�^��Q
ݳe5�v�m�Q~�������m���[>�B��W��DF']L�Gd��fP�?��h	\1�(��ʿ	?�� W�:$~}F���E>��|�-�!#�=H�̬�������6�H����5���'�wt��W����GO~���ٛӷώ�w���ѣ�Ϟ?{�����>��=؂yЄ���Α�ّ5Fm��n��軆Œ��νW�Qh463�f�J�ܖ���f	֌��⪗��1B��"�᱄��n�M���c�]�ڻ��A�2�dQ�
�i~���@e=W$�;/��.�ޱȸy�`s#1�u�w{L��I����m�o
��p?b!�:*�eɭ�Q�%�����G��L�'%c8�R-m�cr��I��*Yqr��f}QO����\a�E @
x�5D�A���`��L}kр��5Y���p)Y�Ua��O����d�*�܆�"
Ex��kOU{����2E�Z]��x���I�j`�H�� iQ�E��Pt�J�Qd�b/J���&f��L�s�{j��o����]�I��V��X��٢��P���w`|h~o6��
�-���5����d�6�|ik�j�Ֆu�����pk��#�[�82>c��
�v��J/�N�,	m�����;��pL92�ӻ�+L������Λ4)=��1�IU��2_���	����L�t�=��6�)&ϋ4��[���p�6;
Hq�y�f� p3����dIg��rs�M;o�m{8&�~�PS���jc�u/n�b��E����Ƚ.MlYz����	/�f�I/N�c¨�,/�-V�����%��0��p<)&��<E�
����:��� 'HF�N���֬=�U�n|�)�3&�~m���Չ�'ٮU3c���W�3��^W֌��r{q*��#��`�01��{��� o'���}�-��]�V��e_ǰ��f�����LH�W+�,�=r�P
�����l]'�Z;�#�������^�w�g��;n�
��֥Co�7V՝5V4�{X�Tl/��P��x���+cm�������-��f�Y�%D#ฉ�Zs�1mT6z������	�:���N����E�D�|�>��&]6 �N��E ��kAр��*[�G�aK(�T�0��p�@��f<�����s�[q�A�kq!�� x� [
c;c�DnS��r��ª��eĜb�������1��W�1=2WhqD~���j?m����2��ƣ9�%¯#s��gDz��	�]in-c{����qC����L86n�7��g����ޡ�*�!��m���)���9&���Y2�>�&��ߑ�˳�wPSp���n�j�hH�z�9v���*�l�9(r��!� �

�G�\u_/�B@��bC
J���t���vk4�cC�[Τ[�c �SWi �mʌ�d{&oQ��D	�2���R^���P�o�(�L�X%���*(�#ֲM����z�5/��
ۡ��Pp�e'�I�ˣH�b�i0s�)���Q �+��K�.X
���q[��Օ�/�`�LHb���K���o�z�S�jV� ��KXr�j��l6�K]�qf�s�� =�F7�>0c(M��E�ӬD� ���+�}��&'��t�-qx�7:���'lA���^�ݼnQ�S�v��G�萘(��d61gE�>��@��)2��"6���ʼ`�Mxڃx���m���.�i����T��7��n0Ԍ����6H0q�>�%����$�� 9)�Y>!��s��[�Y¼eƳ��` ܪ�4㩀�؋��1L1��HU̼SR��5&���X��|:�{����qt���pl^:y�Ztr[StK�S���&R��)Z�!R�GvL��	�yG`�����T�]Y}��V��c�k�( �)���e;�?����^����RH=K��B�t)�h�eg=����-�t:o�/&bȅ��bUDh�b��X$���lKr6�ҷ��#*��Y:�D橕k�n2��V<enەK?_37�RN�^u)�]]��k@�""J$K�J;���8K�H�Cc	�� zp��J	���
|1x��uF�FO�=�ҩh�E��כ�Q�ؼ�	�U�P���QDuX�T���fD�o���
?�ٛ��V.^ڑ�)�;���UpY�e�\��ȭ�9C+�x�a?�,�@�,�E[r`���7G��u����ʵ���6vV3�S�vNQ5�6
�i�~fP���CCv�c�(��?�ߜ�m�����*��0Ǻ�5_�䔈�E����e��(�Z�2B}�ō4��>�d)�=����>�P�����%���gM=%\��,3Л$:lut�px��
o�1yϐ��v�.���g�Hx��l9Bn�{����t'��fsy�v�x��nMw��j���η�Z4��W��
B�Y����,t��s��
_i0*t�
zrh+�O3���^��C
��D#�NˌpZ�4/#��@�m���[n�����9B����r�ZJ��������hk�f)�&�IW���*�٤�SR���J>�~6/�%�
Q���XK����l@�A*#<�C]�@�-�*Q�-/;Ȃ@�]ʑ�/{]�lr��gz�69è"�N�� �
��'��-cpzS�d�S��t:M�J��tJ�1��1	�Ư,���ӝ��i՘�'��Nx5�/=;@3U�fo�ר��[�M�үx�S0�V�+8�����xk�c;�D��y��Y��5�n����W<n�Ʃ{Fm��2���&��p6%��ե��|I巧�
�D�v{��;�\���.����T|~�j�����C{���A4
�5����u�-RגHE��-�2R���d�g���[���I1�W���s\��O�rc�b�H-ђ�;9`R�2�+�Z�YpWTR{��_2X�/����6��p��BG�C��)�1,6u��`�E�pI?���n��
qϡ�B�"[�8=0���O7��,�I�'L�)3	y������*,5$1�S2���W���=�D �Nz����|�>a�P;�%�!j�k���S"Q�L�'jT�)D����`���-���׀����zS ���r<����$2�e|�#ЪI^�g��ʵ�_��q�$�#ptH���NC��y�$Q{�*
EE��,:a	���ȌBD_BW0�pYl2�V?;� 	�'���-���0䴀���z9�	�r�~0	��`"�׫�_�N0$��I�m��,�y���mxg��A���c�4ǰʶ�D�sH�&6�*/<��g��7�e#��\�pA$]@l�h�C��]>7l�@��f5��
(�z��s��xWD�2N܏�@ h�n�����|ü	�]4�dZa�k'䉒H� �Ъ�B�ԌX���aHá`G�a�DK��.-��
v���O�r��&lCl~be�: ���m��
�#�t�Ù�&�K��6y0=2!���=ʅ8XG_w�_�m��d�`��?����5d��M����k����{������Lj��8Sƺ�'�}�i
����zPq�%�޷�����F��x�g�3ą'�[Oʁ�_�TH���SyP��$��(�F����)���U�A��+�9=#�٭�cD�Z�~}�[w�����}�KK�0:�[l��C��a�͟2
x�����g��MQ�X����98~b�B��a&���r㷲Lw��l��y����.��oYu���	�����#<��a�Q;Q�ch�����7�1=ry��m$:�^�"����ҳb���tWĞ@X��m룒�3��i�Tb��Hu�x=G�V\��`��|T?w�]��Y���z�U�}q����*��p���:�i����Z�]aW�A�-� 
�����~���b2�Sg~���8EǷ��
��Q
����,.�G���C=�{��nϐ}�����QM�LL�X�!�y���+���#���>-���&��CS!��h0}eh�#s��ݞV���p�Ӻ��)�'�;u�B��S�&��g�r"H�
�j96;|����Ub
E�����/|�
Nr�N�����Y�$C-�<`�
��Ru��A*�;�\_#c5�!�"�u����rB��=^�"P� Qy��PG/Q�OX�co&C���P�a�e�A�2�{��{��q�ۤ\2�s`	st�,�����$P���8�P���<�����pS��5X�E�d� _�D[3�#��j�*ق&����f�ι�^U��8�!�P�b�� �R�Mn�_�Giv����N�Y �Ү@�INy������y�C�
�'V���E���|Y���~y|pXs:����6F	Q[�^C��p"�RE&s�PM�;�x�/���OQ�.��+kv���="�oVR|����S��HS����JN��29��]��ח�eg�؟|���-��\�56�����#���*;����`	�x<�}`�ɤ��A�j��Z�_qG��z&��Ӊ�9��t�=��Ǜ��չ���kR#�PwRO��J�}�+�j�m�&-�^ihT�Y6Q�
e�3d��6���2���w���oH�jy#����M(�,�<9�6�b����8@7Z:߀APW�R��W�ֲx��"A@o@�O��j�[��mPVԑI\��b}ј�XT�A����9c9@F�ݖ~�P�T��&��z�U1< ��%��&����	����i�l�^M���
x+�/�R�.�c�^#���-�~Ōy�TBFόv��]��3֔��Ʃ�
C��J��v��l
.<�k+��9�so�����Ģ��� i��d���M{��,r��[��6+���d҄}r����}ƌQ�4��y��
�7у$��"hB��Fx9[R��
�j��D��[�����7O[�
4Q��d2�(�4B�Aخ�9��Y�[����b��6+�jIm �).5c��@�n����[�x%uc�:��lΧ�DD�*5o�}F\[Y��!�α�N7!dJZq�����6��E���l;(���h�
{��$[q�{��G�i��c�:�L�D�Z\bH_R�qH�	^Í��n�fw�ٰ��֢���c�x��������!ț-!�)��z�
��O�l�*Ji=�0N��ı�^_���{	��n�"��f<7���\�5M��*���
h����}�M�3��0
�#���j��T�z��G�$��n�����b��1�C��r|	���ꎺ\|�Z5:8��Zmsy�>�O��EG�G�'�T�i�)Ϧ�or�=Ų3���e�҅O�W��Y!�E�n}m�cr`��j]��i����w�ZVg7:�&Md��6`���:]����Dc4�5�*�T�X't;�--��@Z+$כ� õͮ<q���ݚp~�v�!���S^�٧���x ����V��|d�hu�Ӯ��N�}���Z[�-�Fҡ�#���R"o.�[���+�R/������$��^3ԽQ���S(��{g�9��Wȶ�V2v�J�ݮh8�Ո�z[
N�2�	M��@TΗ�@
=��hm��o�F�5���8��h�B{V.� �^P�H�g�WԨ��F�A��˖�KB�� �� ʛ84��ۻh]�h��o%W/]�̻UǢ�f�q����
A�`C�� �Ci��t�\+w!<5��t���5䕜�&X?FM
�����wxo�wE)&#�\(͂�������Iq2�#�aҷZ2��f��p⨇�Z㔲=y��*9T��d�(P��.v���)8x�^��3�
[ D]e�/./�؆J�x��;����:w�֡����d�
��4���8�p��Q����]��
�"xM?��i����tl���h,e��
�p��k�qmS|������SzK&9,�Ki�m�Ɨ��C>8&���iQHy��B�b����8���r[���_ybA�_�V�����2�jUϢ*�������'=)�2���w
�����\p�Z�P"��I���V��VT�zk|�����^m�~�\ �������y,�����(��ᔯ�#4�U�
�ށ4z��p��v��Q| *��L�F���Z�u���KNL�V����U]ů��r�D��C��W������aQ>�ݨޣ�Vl�bۻ�uw��8��u_U�X��jX�JLZ޴	n03����V�s�qc/�mpG��U9[n�>;����-���p�lg��K�l���Ea�fh�q��?*���~4#���n�֋;����Gͼ�c�TA�.�4�zH��)˽=�>ݞ;��Usj�m:�=#��h�e�F?v�,��1���o�1��
��y��b��5���x_׈��d�D�u@�À��Ua����g(�zL��:�P
:�l%��w�^;x�O1�K_/{ɜb�F�gd�`���� ��X��oV��cH���ST�d[�;����]A���������*736�t� F��P���Dت�����B>61��7R�>����GQ�4�=qd�+��	�~�����Xu�&}uɁC���A8K���UG¼��Oj����6��@ �5G������P��xq�����i&ńlo\`�;C��=޶���M$�!��V)i��v �*l1�%N�H̠5�咳
��V7m��u��Q�6)�Gڜ����ꢠ������^���7���M:U�����N���0�t�!��w

--- File: .git/objects/58/871bea55853cb3573d8d9787475e15e54c0233 ---
x��
�0S�+5�q��QZ��>�q��Μd��>J���L�'\o�ev�gzo��-������P�0m����ր�a���R��	�{\*��t��c8q��0"��	��e��h�e�ɻ�ߋ�RE��.

--- File: .git/objects/60/24fc5b9f3d90cf05512e77110c81447b9cac3e ---
x+)JMU046d040031QH���LN�/(��-(�+�d�h�~�j�9ܶwz�{��S&c�����������̂���<��	y�^Gt\��ԑ�"t�ط�� 
R����s2K2S���h���Y��鎒&�?�� ��4�

--- File: .git/objects/60/5c5b52eede30be3aa1ec774dcb5615ce1ea223 ---
x5���0D���ۺU���a���KN\ŮD�z��v�tz��.�ۉ4�.����[#�8����b�1=lu5��3�X9��5��uEb���[�|F.���l�`O$��M�_�t��0�

--- File: .git/objects/65/d9d4921d6fdebf1c3c9c54fff5ae9373bc784c ---
xK��OR�4dH+��U(�)M�L�T��-�/*�q��RR���2K2�R��2sR�sS5`M+. (J-)-ʃiB�r �"�

--- File: .git/objects/68/bc17f9ff2104a9d7b6777058bb4c343ca72609 ---
x�VQ��4�ٿ��!�K�(��>��+�jˊkyAh�8N�[�6��{��'Y8x�a��x<3�k�j����|v�_LI�
^���;���?��˷oyyd��������+vY��7�����~*�12v����O�F�l�Rt$|�c
��0�<�Nێ��)�βzԦ�X���8_����a��d�
������+��w�V̋���G*v�2$�EP��n�UxI6
m[W�Rۘ���K�vK�����_��~��w��E#`�?��O��j��~
:�༞��?e�>�6�¤oDRd�V�æ�m�s�.R��xt\`긶wJ&�`k� i]ėS��au�b��{%)�s�ܸ.2�}�A��S7�(\z�u,���)�b�G�	�%�Q�)�wH3��` D撻������uT^bLpa�E��)���a�u�\�����U^ae?y:fԸ>�i�>���C6"��G&\�h��s<��m�B�c3�0{�� ��������I=��;7+�yHV+$V*DtR5��R,��A�V�U�ĵcJ6n}��=o�eS����/���nzA�W�N��
 N"t
�����{�T�������ȭ<x��{����G�oT+FЦ*�Kg[���a�O����+�N�Ra���	Nn����O��[g	�[�G��d؂�1EP�6`l
�X��`�7��=��,e$>��'�/�L
�
;t��� �Qr�گ�?�҅JN��E�c���O�P�����
b5#��iO96�b[ �6g�|���	�`�r)P����1�v!_%VZދ#�@���
*@�j��`e�V�Һ�g��N�.�b5���֮�|>�	1d����J���7����XT]�lŭR��m8�6	9�N�0�ͷ�#%v��f�S�@4�/���������H�����km	� 3���@ �(�f���(��ې���'�kwΐm8ٛA���/�O�ǧ����]�\��s-�1�����S��ŬH�)EEr+B�E3���&9����$��#�~Yͮ0%!�#W�C���ggSA�a_r��BB�<T9�T���+���sZa�P%{u1F� R_ P�⒒�����O�yơ�PUeW��c�1T/QcM�󵳠\Wk�)��F�������^,�s��8���d��J�"�x�Ѩ�����-���w"��`����,���l茕DN呾�U�F�y�+�/�X��0��9���!��(�FNˉ�tc�/Ϋ��7ZÁp���SE4=:�0���]�k�Ь��������X����s��Ê쀣i���zy,�C�O�	��g.	�c��4��D&�֔�Yk7]�ɖ��J/� ��3��o�\�XJ��V�a����H��}%�q�X`J),���d0�/ Z���<��{�O�j���G���p@v�����fi8hf�˻�K0`�A��S�`Xz�e`�k3&�v�F���9��_Rn��ܡ��h�6�&
�-��;-�� j�	O=���x�K�V�O�,�

--- File: .git/objects/69/427cc6f5b0988c81168ad7fe78fe9967f4663f ---
x�SMo�0�_�6�Ze{Y)R�(��������3k���6UQ��^�y��DJ?� �73PK]û���
7��aj�r���8��,~�-��3)Z���A���28��;&%�%� �+�VMY�Hf-�v�ܝV\t��b����q�zb���;.~`��氛�p�,��eK/XUE��*���Z!qJ���`%
�s̀�+¥"�H�h�����)|�#Z狃��[�����[�֍�숇B�B��.s2��{�{��X^�02"(��B�|�6��e��_��m�|���h�>/�~&k�ZED�n4$2�S�s�O\�'�������[�	��n��SCqE*5F�
������_��!��bsx\>�Rȋ68e%��Q���AX0�8
�-pm ɐ*J�:��i=q�W�D���"՟u�|��6���}Ÿ����\`�͢���CcL:3��X4�'���-J���m!�����ejz�7[���*�t�>

--- File: .git/objects/95/e884154a97b3283ce5b874820405a0f9672e30 ---
x+)JMU047c040031QH�))*�,.�L�/H-*��K��,���M-.NLO�+�dH��zw�`���7徧�D��-R�jN.-.��ť���-�j�}fk�J��؟������85'-�8�N��j��)5Dڂ6,�����p� �oJ2

--- File: .git/objects/9e/f9cc4f640736c6b3b1ec09ac06fed79ff3c8c9 ---
x+)JMU044c040031Q�����,���+�dx6���M�9{wk�+��q�IO�D����Լ����f''/�X����S}�r���P5ř��9�%��y`îpk�:z7׍t՘(sP�: �G/�

--- File: .git/objects/a0/22151633fb6a86ecac0d409a61df65b58a287f ---
x��A� @Qלb�M��M��*[c��`�����}���.���S�nL����8J�z�Gv�7�zvjju�S�<xg2�Lm��kۥ����lϏ�/un7�z�ă�:4��������
�I}^�@�

--- File: .git/objects/af/80990e41fe8f6e8b857e0ee3a8391229a93e9e ---
x}SM��0�ٿbH��1
{(��,�����QⱣ�l������jd[���ƈa��x#�:�f�����24�kn���N&_ǝ��Iq(����n�+;[�O�$56@��:�����A����&��p}�dg��E���;lz�a]����f�,@�q��-�@U:R�Esw*~(�?Tc�g��Q�_D1���
�A}�:�.���4rǜ���hD;��֊_X�����L�gy�<�ر�{_y�l_��9`:	D$�fR55���P����Pꎶ�.2��75�5��*�ؖvG~�(˙�������7~t1�~�u''���̜�A��4�����Y�^�wO��-����o�Ȏ����[�}M�� �~uēh�t����e�I�e�:�F���Ƙ�\m��"Ю�؀o����^EZ^�wF��Du	���%?bʀ��*��=yXv+t�޵�I�����=>�E���L�T�_W�5�����1�0h�S�$�MA_�

--- File: .git/objects/c0/39e8ed076d98ca65068d6e7663b74871bbd6dd ---
x+)JMU01f040031QHLO�+�O��K�L�+�d�t�9�uÌ�F����*��L��f ��=

--- File: .git/objects/c1/69ed7c5a2d0f7e4e2a8cd2ea43cc1496e3894e ---
x+)JMU045c040031QHˬHM�/.)J,IM��OLO�+�O��K�L/�+�d��)'�k.矮�׹�og��|)TkFinb���+��q�[ߵ}�����v,.�Ր����l���7����-y��V��?US ��B�

--- File: .git/objects/c2/be498f6607930838ff4e9ef4830a92fd33b047 ---
x+)JMU041g040031QHˬHM�/.)J,IM�L-�+�d�T��8g�7��i\�7����6�*/��/����/N�/�hY�0���_^wk���B�+��A�'�e�dV�Ƨe���%概�H�ye�l���26sB�]7�xO� �v>�

--- File: .git/objects/ca/76eca143672fd652a4e66346772b4fdf65292a ---
x��=�0�;�W�L-T��� ����6�/�8���T�*�)�{�=\�U
oy~j�P�7�6&�7J���Lhe,G�$ w�gֱw�����
�,��3��I"h��_
>�U�F՘B�`�:ݠ��s1���T�|�����QSc�$���@ ,�-��-��)r�����d�6L�l��ch��r��<r�)��6

--- File: .git/objects/cc/25d11bb98e383c4b10344fafa5653d1a2943e8 ---
x�T���0�9_a�!	��e[(=��^Z���I�D�cK�m��N<�df�e�,���'i�����;�t,���a/jdm���jP�2<%!>2*	��(�1�������jG���^\�͠�lF[�0*�,��b�N�*t�"�^�T_�ڲ��6�Rٍ��r�)6� `�D�1�l-�%��H��������0�Bv#C�����K��2&�|Ogu}�颉�j����A'Yq�J#
P�$w�>��#�v'��P�F/Ò�-�Q金������z����}^,��<����/��~�W���R� lX��	�eꔫ��)[ceY!گڤL�{���ngy<��7S|`9C*[=�B��?~��x��ǯ4����n�j�+��q�$~x�����f.u���l��<�}�"���}i}����?�����8߰?}t"ܔTE�:x���]�w/����g�^?��%g!�N{/kŊ�_��_6t�'�����	�fiY��H��1;͓֩�{#,�z���JI�
q͞�)�2

--- File: .git/objects/d0/f40fcd59fae584f1dd9ecd4c63794576273745 ---
x+)JMU062d040031Q�K�,�L��/Je��#��"�����"v���,W�41 ���Լ��������b���ok�t����z.�r>#2�q�D]J~r1�ۃ���'{g��rj��'��
�Ԝ�Ԣ��Ҽ����b�C�<���'sX������k�_�
����)�9�,_�eϝq*��7�,y�G��kw!

��sJ�T�DϷ�p�5P�\��ѥz�;����L�
F��JW��/և�����%��>���|ݔ|����݉Y�3�,o(���rB�C�s�)�%�@w��y�?�����o8װ��>�� �9��

--- File: .git/objects/d4/d102be089eaf8ab79f2fa6cdb2b8a51373d656 ---
xK��OR042`H+��U��OI�)�KLO�+�O��K�LW��-�/*Qp�9����2Js����l��4�� /17�V) ��$39� 1�DI,1��� (6B�K I�+@

--- File: .git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391 ---
xK��OR0`  	��

--- File: .git/objects/e6/d40b2b4d414ac017372d594528911cc1273b58 ---
x�Uێ�6ͳ�b��!-�U��0���E�I���ł�$�fW"�����o��� �%qg�\\���7o^���w�T*�m^��o55���-%;س�g�4���B�
n���4�eDЎA��Y��3����;&LDn쇷v�f�L*)����~k�XԬͻ�E�H����)Mjt��h��������ˋmn��.�pa�W����.L�~��`���(���h�
0Z��������$FjOG�����%ۏ?�}�|��ߒ�ʟC����n����7z:��G�ɭn�a"Ȟk#1�5�?,ܶ�������Aɖ����z�./��}�h��O��T1+b+w���3`mQ̘bUpGꢧf_�#��ҢHsH-��hft��
i ��wHgs��D+;�:���' �[�A)�Cb�#C2W���"�!��7Ru�VG��l��j,I�,��Yv7������l��v %F�5	�19��B�8�o:ʹ�8wᔸ"5�>�,ݽ>w���d�D�t������cd88)�k��$ء傭����C��|Y��v����d�8��u�O}�}@�<�,Q�s����_*�X�
�2� ��yAQ�cٹ�'u`qAgR9*t+
_��׌P��ٴO�n�	�K����8��ɚ�]:p�0�`��LC��p�)��	�����)������U��9�����t�ܘI/��hI]�x>��*��h�lz�$����������<Sm� ������}��),�y�N7ac���tǃ=i���s5FH0�#�^��U��bp�m�-�;���VI�A<	h����㨴�6A����؞r�=N��j��&���̖��ח��qظ۰ˢ,���ـ��_�;"#���[�p�bfPc����]

--- File: .git/objects/e9/a299736363a4f17006890142b927b3a72555c3 ---
x�Y�n#�ͳ���>����YLA���x��L޼x-ݢdf[�ɶ�8����u�6��ؑZd�.�N������/o��A.�V[����ˣ�M�OM�XH�8��vɖ�L4f�B�iݪ�\��ゞ]�G~m�	�e��3�]|8�?u��Y3�6�⍴R�I��.���j���(d��}r�h�����g�>ɼ�����z������|)�3aj-;+[-_>�U߷�S�ָe���n�1�E���o4���N���s�eR1{/�-�ǆ���X.9#E&GnㅵZ��V/��LT���5d�_z͝Y��?Emټ�� wj�I��vVȜN��v:�(J'AЙ7�G|�	$�['�)��1�.�7���)�I	'[?�߰��
����J<Y�2�2�eY�BXĩ��a:�Ob6uFD�?	����E�V��R�����%W�	sK�
k��A����Ӻ��B����; S�]���A0,ڙ���4ܗ���u�2���+�ELC��#��,��G��v����)|��&���01s�:�N�nqƌ���1W%�8��2��Z�v�l�xtIpN�.�� :=ٞ@�1y���l�Ӈ��?ҘUNc�~�{���Uc��Ř!×�����K)�&A��eJ+��;�ܹ*;w3�N�L�A��^���{a�^J����N�<T�n���M��F�(m%%ݪ�E��*l�՚���J�1L�5��?��zq}����ǫ�k�M��+��d>:���ŕ�-�����7�>FZ%՘4D� �E��~
���9gEBv����ر�8c����p�k'[��c�l����z\�g��9��qCk�Y��;��e�+��D�Փ���9�y
����9 yWK]�)1�?`1a�6� +fDE��R��Tm�?q;�l��p�Z;���~Qdv�!)U�E5��jeҟyav��� �v��hfI�":��b2t�"�����
$�����[Ǩ�rI	:s��������L=�ۓ���$j�{I����2��;��m4W��F��G�E��3�6�FP��~q�p
M
�F	��x}@�5
�ƒt��$��	��(,۩�8��v�Bl.[�
׷�iVĖt[ �Z�@}wn8�բ�A̶�[<�������>�6��>�1|�G���u/�@&�Ї�����jt�P�ت�u��$��^6ڜ�d���M�7���'}��OuL��<T��t푑pD�)%6�tZ*[�>���(���=��9���`b�!u=;g
W��7t��IC�K=n"�d:��K5�󀐺vf��[��^�y�P�A]��73�0�-H����f,���\u�w�=��e|K�j>*�3��������x�F_��s�2�F{sM�a��1��8�bQ� H�
]n��8��c�0R �]�F`�"~����X�=qHF�!$F�K��ZR��cP�
��ߖ��V�W)S���S-�����$p��
�X]hu�I��sJՈ��y��҃qBY ���x���w�N�%ߵ���)|�G�H��9�Ӝ*&\X�ĺ��w�qL��Df�+���m|r2ܓ�(ؖ���O��k��(��%�>��+�N���P� MZ�C���zW��yD=�5���K�A�x褕ӟ7l�M}Sc�ޔx���qyZĵ���˖��V���P���h�0�OCcc� �)���[��]#h�������w����A��	�%�q?f�im੨t�a��y{;	��^K4���>�0�	ɸak����(\���7�w�S�fv�`_O�Q�=�+�� ����kb�����X�
נ��Ѽ�d��3���y�F��x�6��h,k�G���כ�͉F�l0�������3�+!%��mD1ٴ��L�m��E;��W��W�8��=1�����\�\1�h��~�t���� �8�J��"nN����!Jt�[�V;ZעT�p�1��RY���3����
��l�8Q��l�.=��u����L��G\)��q\1���1fjZ��� ��&��@tc>>�l&��`p�d����:��[}S����oj�(����wt�����"M1C
S�t
5�����I�.uc-t3N�sj{�NsJ�K���᯼ ~�H��GY�2��s���]x�P�]�L��1�;/L
�G^;���ᫎ����?��8n ��aW'�KbTD?H疸VS��A��[�v���_^C��O����Z0���	CU�@�g��N�����/�pKB^c5�,��a3�;�E�@5F�c�_�~e<�N����p�DW�c0�PD�t�}�aJ���i�&���,����ClCBP����_t%S���w]i	9�C�Ǐq�w��w�So{��uB�ﱒX:kM@����؍��>��b����Bm!�ij�&2��B?lDyQM�[dV�{���2��š]H�d
���v\j8��	������[�Q|���X�rSȼ�'���g�T���KY�/�����Rj����z�

--- File: .git/objects/f2/785e45819fb969f64f75960a3fd927ddb94b31 ---
x�WMo�6�9�b�b�^w��^�Ҭ�Tt�4�%ZYl(R%)k��;$EI�lg�&�?f޼�f�j�n޿�����4��*��2��r��J'�ٹ�*%Qڤ��*}X|����f�X	�2�l�^�X`��J��N�
�_��_�sM�K����hk-�3�e�o~}�O�
�p}��럛�ۇ�u��Ԧ�)W�I^5�Ϙcj
�v��7_6wm�����]�}	aJ4&��ڲ-��oWo�����?#<p���K��T�2CUaB�A�H�"���{��r�(u�B0��À��0�9����bR����F��d��x���-d\���>�c��#[

I1||�u�UbPn�_@�<��-4�B�l=���˗��J��ҧ���Jdn��iJQU(8cI}}��N��]<�z��7���U���<S��<��U�ji��-��#����b�9)OV���ț���\0�^��v�|�RP0�E,����o�& �i�x���LG�H�6�S�������#(K�ߞ�X�N�2���v�/�4����qN��ΧRbS�pS� 2&v�9��o�Q�,U#M�h�s�$�e�Y���7�\����g�I0\�D��IކH��f���Y�*�a��~�pO�[��*�mS��9�h��>��o�2=8}�x�a���M�4�G�"��ɪ�}emk&�N���-:�%��D�\��[%'r���*���#�O���Ĉ��{h��@��E��=D��?�P�����\��m3N�o&j�8ۜ�|͜ #A}�i�~v��	6�j�����@���ٹ�>E51�A+	e<iU��?@E͢d�(M��\���~6j�)nr����G�jPc�0!�E�u�k-`bW}]�~��=�`�����/p�J?����`:�(�YsI���'4�:MI*�SRh�>��I���?I� �R�=¡Q��%�,)釳{?kSSJ���-�)�(�hJ?T�~��j$��S�?�:h5��ف�	i�h_%n��4��\d���iR͇]]��� 7N��F�&�)�����ud<
����F��dIb

--- File: .git/objects/f5/606e2840ceeb5888d6968288640412cf734d7c ---
x}TM��0�_1�¥D,�r�����jAB���LkO����{����.�S����i��tu����N���㠽��G����;[-#S��]d�"wt�M��U�[cy}Ƅ�t�p�J�6t��c-��IQ`o8��Ա6�R�K4�6��2y�]6��`܎���O�Ȕ�x��YG2�X��	���RN�ɪ������1�`K3�02L�瑸H�졜��Q���9��!i�pb�!�)\�P���xI�^��%��A�Do~o��ӑ���LaKwy�=���u����4-���$� �xv)	t��i�����-D�3�~2;��/Ro�Ѕw��CsF�D2���+G5�9���ǥg	2�6ʹ��fv�*Vj=#SH+�>���h5U�0���5�\5�����II.��l����ɽq���c����8�mC�k��z�� ��3�)�3�=��+��'���X���g%ʱ�e���I�Q�eHkN}��)��BO�N��j��f��7�uC_���c��W��|��h�|�a/��bա&�8���+�W�T�u�\4���GLfw�f�
���p]��$nu�g+S�%��K k��<�
�9�C��@�J ��ش�0�B2l�I�����~C*��`v����a��P:4/oFD����e��������g

--- File: .git/objects/fd/b4d274510353f55479d767432d54dec266525b ---
x�S=��0��_��6`�(ڎ:t�����2�h�t�����8qp����̓����'��jX�6roV's�z��Φl�G%/�P?zP�0��C$�QlC�f]�~�h�1'�ԃg����ʑ#��l���A�CKN�n�!صmq�B��$���d��Ef��-Igݠ���1x�W�ƑD�����G���#f�r+ϖ�aso�CK�s�Jj[�VA�Te���ģ�
4��(�
�҄[��
!�nP���O�e��"�V#9��~I����gI#�i�.1nK1��p���W��絧b������e�9`Z�3�Y����v�8a���nG,3�)�iK��PЂ�v8�E���������o^�Y
���b��sR$� �կL���:�L>?/��\����l�&Q����EXH��m�sH��vT�^���-��C,�2�EW湞�?�#�o

--- File: .git/objects/ff/9ab44f26a34c9b2a7d1b316e8c3fc87dfd25f3 ---
xM˱
� �姩����#�䌣��T·o��o�\�y����D{�fI|i6r�t0��T�2(c0���IUȝ�^�.�{���U�$_

--- File: .git/refs/heads/master ---
a022151633fb6a86ecac0d409a61df65b58a287f


--- File: .git/refs/remotes/origin/master ---
a022151633fb6a86ecac0d409a61df65b58a287f


--- File: .gitignore ---
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


--- File: agent_configs/fixed_strategy_agent_configs.py ---
from models.agent_config import AgentConfig
from helper_functions.fixed_strategies import (
    tit_for_tat, 
    suspicious_tit_for_tat, 
    forgiving_tit_for_tat, 
    defection_sensitive_tit_for_tat, 
    tit_for_two_tats, 
    grim_trigger, 
    always_cooperate, 
    adaptive_strategy, 
    soft_majority, 
    hard_majority, 
    random_strategy, 
    betrayal
)

# Configurations

tit_for_tat_agent = AgentConfig(
    name="Tit For Tat",
    agent_type="fixed",
    fixed_strategy=tit_for_tat
)

suspicious_tit_for_tat_agent = AgentConfig(
    name="Suspicious Tit For Tat",
    agent_type="fixed",
    fixed_strategy=suspicious_tit_for_tat
)

forgiving_tit_for_tat_agent = AgentConfig(
    name="Forgiving Tit For Tat",
    agent_type="fixed",
    fixed_strategy=forgiving_tit_for_tat
)

defection_sensitive_tit_for_tat_agent = AgentConfig(
    name="Defection Sensitive Tit For Tat",
    agent_type="fixed",
    fixed_strategy=defection_sensitive_tit_for_tat
)

tit_for_two_tats_agent = AgentConfig(
    name="Tit For Two Tats",
    agent_type="fixed",
    fixed_strategy=tit_for_two_tats
)

grim_trigger_agent = AgentConfig(
    name="Grim Trigger",
    agent_type="fixed",
    fixed_strategy=grim_trigger
)

always_cooperate_agent = AgentConfig(
    name="Always Cooperate",
    agent_type="fixed",
    fixed_strategy=always_cooperate
)

adaptive_strategy_agent = AgentConfig(
    name="Adaptive Strategy",
    agent_type="fixed",
    fixed_strategy=adaptive_strategy
)

soft_majority_agent = AgentConfig(
    name="Soft Majority",
    agent_type="fixed",
    fixed_strategy=soft_majority
)

hard_majority_agent = AgentConfig(
    name="Hard Majority",
    agent_type="fixed",
    fixed_strategy=hard_majority
)

random_strategy_agent = AgentConfig(
    name="Random Strategy",
    agent_type="fixed",
    fixed_strategy=random_strategy
)

betrayal_agent = AgentConfig(
    name="Betrayal",
    agent_type="fixed",
    fixed_strategy=betrayal
)


--- File: agent_configs/human_agent_config.py ---
from models.agent_config import AgentConfig

human_agent = AgentConfig(
    name="Participant",
    agent_type="human"
)

--- File: agent_configs/llm_agent_configs.py ---
from models.agent_config import AgentConfig

altruistic_gpt_4_turbo_agent = AgentConfig(
    name="Altruistic GPT-4-Turbo",
    agent_type="llm",
    llm_model="gpt-4-turbo",
    llm_personality="altruistic"
)

selfish_gpt_4_turbo_agent = AgentConfig(
    name="Selfish GPT-4-Turbo",
    agent_type="llm",
    llm_model="gpt-4-turbo",
    llm_personality="selfish"
)

altruistic_gpt_35_turbo_agent = AgentConfig(
    name="Altruistic GPT-3.5-Turbo",
    agent_type="llm",
    llm_model="gpt-3.5-turbo",
    llm_personality="altruistic"
)

selfish_gpt_35_turbo_agent = AgentConfig(
    name="Selfish GPT-3.5-Turbo",
    agent_type="llm",
    llm_model="gpt-3.5-turbo",
    llm_personality="selfish"
)

--- File: data/datasets/sim-hard-majority-vs-soft-majority-2024-05-07-23-10.csv ---
Agent Name,Round,Choice,Score
Hard Majority,1,DEFECT,5
Soft Majority,1,COOPERATE,0
Hard Majority,2,COOPERATE,5
Soft Majority,2,DEFECT,5
Hard Majority,3,DEFECT,6
Soft Majority,3,DEFECT,6


--- File: data/graphs/Hard_Majority_vs_Soft_Majority.png ---
�PNG

   
IHDR  �  X   ��%   9tEXtSoftware Matplotlib version3.8.4, https://matplotlib.org/%#u   	pHYs  a  a�?�i  t�IDATx���wte���$ �FK�7P��" E+"��X +VT,���H$��(��"�H	:��>�������M~�99gg��ٻ!"7�;3�0     S9�      P�    �	t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P� 6k���X,Z�|��Q�A��1m��٢�~�Iu�ԑ���,�Ν;gv�<
����?��b�رc��  �FA �2e�Y,mذ!��[�j�5jr�+���b���?���a


��bQ�N�LHx�f̘��������ɓz���!www�Q�Fz�g���t��;}����.�����?ִi�����_]QQQWu���蜟�W_}5�1�����b����5g,L�V��رcm� ���dv   
����f̘�[n�%��+V����ruu��c�ٳG�{�[o�U�ϟ���Kξ3fh���>|x����t��5h�@			����ӧOk�֭�8q�~��k.��ׯWbb�^y��i�&g�믿��={�[�nW},777͜9S/��B�����Z�`���ܮ)ۥ&M������~��?^NN��3mժUz饗4h� ����� l `�0���*ww�9^�����j	��͌3T�~}�:u꺏}#���RSS���"�*����/�TLL�V�\�f͚�z.!!!�/ �։'$�@�h���w�i˖-�]�v��(==]w�y�~����:����
�(;;[���rss+? �k�w �
�<y�n��6���U����8qb�q����ԩ��,Y�
���]�}��$�����֭�<==�'�xBiiiה�O�>:}���.]��/==]s��U߾}�}�;Ｃf͚�T�RrwwW���5w��|�����W�^��󓇇��4i�~�!ט��Ϛ5K/���ʗ//%$$�9�U�V��t�С��١��JJJ������<�>,GGG�7.�ϗ��!???�{�y�KHH�����z꩜}~���W�.�,YR
4Ќ3�=�E�����4i��9oo�<e��o�U������ҥK�{�ё#Gr�oժ�(Ijذ�,�
$�Ţ��dM�:5��s5�hڴ�����|��ӧ��;�_��,X�@;vT``�\]]U�R%���+����5.�sГ����O*((H���
�;�#�0r��X,:t��O���ի���U?��S�s�A;v�F�)I
������jٲe�_:\*<<\�ڵ��� �v0� �W|||�3�y�M�8QիWW�.]��䤅�GQvv�}��\c��٣>}���Ԑ!C�������oWLL��
���@M�6�g5CCCմiS͜9S�۷�$��㏊����w߭	&�y�|�.]��_�~JOO׬Y�ԫW/-Z�H;v��{?~\͚5SJJ��
�R�Ji�ԩ�ҥ��Ν��ݻ���+����EO=������U~����Ç��ޓ$yyy���Kݻw��ٳ5~�x9::�f�̙2C����7�����w���N�}�Y�����RZZ���nI���Æ
SϞ=���+55U[�n�ڵk/�I
		QVV��M��S�/gʔ)���{հaC�7NǏ�|��+W꯿�������y������?��/����0U�TImڴ���߯F���$U�T��wQ�>}��7��7ސ�bѩS����?kڴi9���9���4b�yyy��_��ѣ������~���c��t��~�M�V�:u�d��9RG���s���_՜9s4t�P�.]:����������3g���S�ҥ%I����߿����۷�6��������Y� �q  ��<y�!�_իW������<�i׮�Q�b�\�BBBI�O?��k���oH2�̙��/99٨\��!����߮*���덏>��(Q�DN�^�z�[��y��;^1{zz�Q�F
��n˓}���9�Ç7$��Gξ��D#,,�

5����0��~�͐dT�X1�{]|���ױcG#$$$�g\�d�!����s��U��Ѳe��s.y�s��СC�?��]�����ǎ3���
IFDD���C3f�0Ν;�k\zz�`ԨQ�8�|��E���ѣG�����R�����������$����6�oߞ����?6������dc������g����3���Fjjjξ���󊊊2$���j�����ӰX,ƾ}�r�I2�;v�y/IƘ1cr��~�mC�q���\�Ν;g����<�L��Æ
3<==������9  ��w @�>��c-]�4�W�Z����3�-[�ԁ�klXXX�e��/V�r�ԳgϜ}9���⮻�����h�"%&&jѢEW���4�ٳg�-ZhӦMW|�ŋ�Q�F�.H���x@���ڹsg����s�۴i���@M�>=g���۵u�V�s�=W|�m�ݦҥKk���9�Ξ=��K��w��9�|}}u��a�_�����)SF[�l�C=��g���O?U߾}�W^y%gi��
t��	=��#���w��QyN(HիWW�Z�4s�LI��t��U�����*11Q�N�R�-����ݻw_�}/^,GGG
6,��'�|R�a��̵�e˖����ޏ%u��5g%�$eeei���9��  � ��F��M�6y�J�,�g�ʕ+զMyzz���W���z��$)߂�o�R�ʕe�Xr�������jӦ�f̘���NYYY����-Z�HM�4���������﯉'�ɝ_���U�V-��K����������맨�(���H��C���^�z]�NNN�ѣ�,X�s^�w�}����\��g�����5j�*U���G�ʕ+�*_�r�4q�D���iϞ=�0a����5z�h}�嗒�����}�����=+h}��շ�~�}��iժUW��͎;Խ{w������[���9����ơC��%J���~.$i�������!I��_t��q������
 (\t �
ٿ�n��v�:uJ�Ǐ�?���K��'���<��*�+�_I߾}��?��O?U���/{%�?��C]�t����>��-^�XK�.U߾}�\��F��0`����%�04c�u��I>>>��ڻ�[���93�s��QDDD��U�VM{��ѬY�t�-�h޼y��[4f̘��h�XT�jU=��c��������k��L}��ѩS�4d��*UJm۶�wܹs�ԲeKmٲE/���.\��K���7ߔ��g�F��E�v�T�L}��7��o��Fe˖�u{: �}�� n�������^>��:t�6m�\S�		������={�\W��ݻ���Ak֬��,�y����%K����S�����Ԅ������琐�����U��Q���֭��ӧ�?�PLL�Uϒ�z�*W��fϞ�S�N��_�5{~����z��ɓ'+&&F;v�k������k�,+VTɒ%'��I~߷={�\���Jߟ���͛k����իW�[�]j���:}���L���\�:u���		�ѣG����k����pttT߾}5w�\�={VQQQ�ӧO��	 � pC.��K�u||�&O�|���С��=���f)))���ϯ+����&N���cǪs�Η���(�Œ��Y��ъ������֭��իs�%''���?Whh�u�W���y�%������?����_�J�ʹZ�qppPϞ=�p�BM�6M���y
��ӧsm���(22R�a�{���֮]����<�׭[�ӧO�,ioР��駟溅ޏ?��]�v]��yzz�ܹs�9�r^}�U�3F�=��e���3����O>��?�ߡCeee飏>ʵ���ޓ�b��?��x.��>{���u��Y=���JJJ���  l�Y ܐ�m����E�;w�)�&MR@@@���2d�>��#
0@7nT�r�4mڴ�^��j����$���Ə�;�S}��Չ'����r��ںu�_������mذa����ԩSu��A͛7O��;����k���1b�6l(//�\�d�۷��~�i͟?_?�������ؽ{�և~�1cƨf͚9�E_Զm[�-[V͛7W�2e�k�.}��G�رc�s�/5m�4M�>]ݻwW������]�v髯����[�������o��{�U˖-էO��۬�����_ߟ_~�E�ǏW``����Ըq���l�R-[���f͚�dɒ8p��
&�ŢiӦ]�i�;wV�֭����+::Z�k���?��h���W}[��_��$����n9;;�s��9Žnݺ�Q�����[U�VM��ջ�� �̬�� l��nouQ˖-�܊���7jժe������ƛo�i|��Wyn��m�.:t�ѥK����(]�����?���5�f�J�{�/��ҨR�����jDDD�'O6ƌc�����͚a������={�������ѨQ#cѢE��\��ڷ�~�'O~�YKJJ2���k������Z�IƪU���y�-;;�

��6`�a�}��q뭷�J�2\]]�J�*#G�4���xܭ[�#G�4�իg���NNNF�r�^�z�6m�3~���Fݺu
WWW�����ׯ�q���\c.�g�{�n��[o5���
IW��ڥ�Y���n��r�J�I�&����h<���9������߷Y3����x�	#00�pvv6�T�b����Fvvv�q��G}4�L��m��0^y��|�򆃃C��\{뭷I�믿~�� �]�(��  P�]�v��/̎��ݻk۶mڷo��Q�����k���6�g���'�Ptt����͎ ��� ������ӧU�ti��(..N?���вqqq6�sa����K�lْr v�s� ��%K�h֬Y:��n��v�r<xP+W��_|!ggg=����e��u�VEEE����ȑ#Mˑ�����^�����mۦ�� p�(�  \�o��}����^�w�aZ�+V��{�Upp��N���e˚��w�}�?�Pw�}�F�eZ��'O�o߾����s�=�.]��� p�8     �9�     � 
:     6�sЋ���l=zT%J���b1;    �����D����[[@A/f�=��� �c    �����P���1 
z�S�D	I�����MN   �,			


��0�������ۛ�   �S_m'     `(�     � 
:     6�sБ���,edd�v���Y���f�    ����cǎ�ܹsfG�����Uٲe��   p�(���b9���e��0����ĉ��r�ʙ�   �Ot�����)�J�2;숻��$�ĉ
`�;   p�Hr\<������$�Gn�v   p}(�ȃe����    7����˗�b�p>    yP�aN�<��~X���ruuUٲeծ];�\�R�u�6**�@�+::Z�E�7o.��]�Y�f������O�   �}�"q�=z�Pzz��N���+����Z�l�N�>}��HOO����ML��\\\T�lYS3    �M̠��;wN���|�M�n�Z!!!jԨ�F��.]�(44T�Խ{wY,����cǪN�:��/&777I�O?��[n�E���*U��:u�����_XX�$�nݺ�X,jժU�s_|�U�&777EDD�O>ɕuժU�S�����ԠAEEE嚍�o�����-Z���]AAA6l����s���OT�J����L�2�ٳg}g   �
��9r����*UJ���Y��6l�`v�����K^^^���RZZZ��ׯ_/I�<y����r�%i߾}�7o��������#FhÆ
Z�l�Խ{weggK�֭['I��_���N�4}�t�=Z����v�ڥ�_]/����N�*IJHHP�ΝU�fMmڴI���y�+~������;�T�=�u�V͞=[����*Iڰa��
��_~Y{���O?��[o����    lK���ٳgռys�n�Z?�������w�^�,Y��h7�����L��!C���O?U�z�ԲeK�}�ݪU�����%I���y������믿�#Y��_ꫯ�����v�ܩ5j�-U�T��3F�������I�δ�ܹS�}���3f�b�hҤIrssSdd��9�!C�\���7N�������%IU�Tф	ԲeKM�8Q111���T�N�T�D	����nݺ���   `��A�#o������4y�d5j�Haaaj۶�*U�dv���G�:z�����{�y�Z�|��ի�)S�\�u!!!�ʹ$�ݻW}��QŊ��흳$>&&��INN����5x���}///���9����٣Z�j�,���F�]1ߖ-[4eʔ\�l׮����u��A�q�
		QŊտM�>])))W<&    �DA�#���4h�^�z)  @u��դI�̎Uh���t�w��_ԪU�4h� �3抯���̳�s��:s�&M���k�j�ڵ���헓��$I�4i�6oޜ�}�v�Y��?SRR�|��\�ܲe���ݫJ�*�D�ڴi�fΜ�r��i��Ѫ]�6�i  �S��u��A�c�F��ݎ8p@'NԈ#��s�i���6l�\\\4p��|_�����턄�{�EFF��Z���YYYY���ӧOkϞ=�4i�Z�h!�z��K]�����+S��u�����/�c����o�QZZ�\]]%)�����W��v�ܩʕ+_v����ڴi�6m�h̘1���կ�����   �)5%I�;�*~�zYⶨt�Ng��[-�Zav<� 
����V�
���K�^e|������O/[�Ǎ��^z�0c�ӧO�W�^���T�V-�(QB6l�[o���]�J�BCC�l�25o�\����=/�dɒ*U��>��s�+WN111z��gs�	����~��'U�PAnnn����K/��aÆ���Gw�y���Ҵa��={V#F�P߾}�����г�>������;���i��3�<�&M�h�С������驝;wj�ҥ�裏�h�"8p@��z�J�,�ŋ+;;[����  ��:���C;�����r<�E�w+(+F���-�O�	sB��Q��H�r��k_�j�4o޼˾fԨQ1bD�vBB����nZƛ���K�7�{ｧ���+##CAAA2d��{�9Iһﾫ#FhҤI*_������=����f͚�aÆ�F�
ׄ	r�J���I&L��/��ѣG�E�Z�|���~yxx�����ȑ#��驚5k�\����[.��?�:u�f͚=z������KժUK+V����?�-Z�0U�TI�{��d���w�}��c�*55UU�T�̙3U�z���  �ڤ$�+f�Z�;`-��������{�E:#ovWr�r
���jMT�Bѿ����0㿇����W�����?r�=��Z�v�V�ZuU�HHH�������������T<x0�=�qc�O��{�W���rww7;�M��  (����Ў5J8�^NǶ�?i������e\�)��{U�/US����T�a�8�楿��
`f���O<�f͚���_�]wݥu�����?��nv4\���_�bŊ*_���l٢g�yFw�uW�/�   EAb���X�ă��t|�2~D��̌�TIq���5�b��/��6Z�a(�v�aÆ�?�F���_~Yaaaz���/{�2�cǎi���:v�ʕ+�^�z��^3;   �%��i�^R��$�R�qTyN$�H'䧣���
՚�?0D���,q/fX⎛��  `��ϞR�UJ:�A�'��L�nU0��{\�t�#\����R_�#��t��BN\8X�n{�A   Pdğ>��k�}��'�V�|�{L���W�My�4P��&*S���zj���   �.�;uL�;W+����ܪ��{hW�|���_q�J��%�����Deʫl��.��   ��=�����Q.'��\�n��I��3�����y�+Ϳ���((��ʕ.�r��Ft    6����:�s�Rm���m*��GeuR%�{�RV�=#�PK��
\��K�Q`��n   �iN�Ց�2�U�){TF�U*���-�t��Zƽ�(�z3U(YZ
=5psP�   �SG���:h��OmS`��J�36���^ՔY��J�5TP�&��[�2�"��\��˗�u��:{��|}}��=�������Ku��)�|   ��:wHGw����Mr?�M����)�نE���u�+B�ej�D�u�z����LI����7h� �;wNQQQ���Q�/�C�i�̙���s=W�zu�ܹS�'O֠A���x͚5S\\�||�I��

R\\�J�������  �oFv�N=��;W+-f��OoS��+@���2^�Z��֖wņ
�l��
1%=`[(���������_�ɓ'�*�k֬ѱc����yM�rqqQٲ7v#����F�  �'#;[����]k��Q����|��*��<��2,�u��ՔU��|+6TPd#�����`v ���>}Z}��Q�����ᡚ5kj�̙�ƴj�JC�����U�ti�k�N��x�bU�ZU���jݺ������=���+V(666g�W_}�~����)���Ə��5k���SAAAz�G���������e�Xt�ܹ�}���S��������P����W^yE����x�EGG�b�h��͊��V�֭%I%K���bѠA����_�T�RJKK�u�nݺ���W�� �}3��u4z���i�VOz\[߸]�^Qٯ���jzd�j��W)�+�p�A�P��m�5��jw��JyH�����sԤ��h�V�%|��X�Mc�Fjj��ׯ�g�yF�����ԿU�TI�5�7u�T=���Z�r�$)66V�����裏�І
��O^�{�)SF�ڵ�ԩS��/(%%E�g�֊+���_����	&(,,L�#�<���~Z�|�I��޸q���.�;V�{�֪U���#��T�R��Ϳ��;=z�ƌ��AAA�7o�z��={����[���rqqѰa����߫W�^��'N�~��?�|U�  �#;[q��ֱݫ��I^���B�^*1���2
�8�w��r��S��B�5R�g	���(:(�"�0t>#������Q���/Z�H^^^��ee��]�|y=��S9ۏ=���,Y�9s��*�U�T�[o�����sϩR�J9�����ڶm��|�ͫ�v�}���'����?��s�R�J�^�m���9�CCC�ꫯꡇ�lA?~�n��v��⋒��U�j�Νz���s��n�-�/.��wtt����$)   �9�}����ɓs
�7�|���`�j��>7  �M֙�]:�{��c7�ę�
J۫@%�)���b�Btڻ��ruT�r#Wk��hJz�h����gd)r��Bߝ/������x�n�Z'N̵o�ڵ��{r�������kΜ9:r���ӕ��&�\��_�~��]�v�q�ƹ�5m����u��Q>��~��w}��W������/�hܸqڽ{�������T�����x1W׮]s�k޼���}eee���Q�ԠA���z�!C��aÆ:r�ʗ/�)S�hРA��  `��,9�S'��UF�&y�ݡഽ*�d����t�Q1N�:�)�����*�ZUr�T%S��E����*W��k��Çsm�������������=|�p����9VArrrR���5f��]�V����3&::Z�:u��?��^{M~~~���?5x�`����[Я��~��u�v�����նm[�رC?���u�   7WvV��خ�{�*3v�J�ݡ��}
RJ�ە�N:��3>�2�W���#ꫲ��*�{t ����+rwv�Ηۙ�m�ʕ�ڵkάzvv����oEFF^�uժU����kߚ5k����>���;�ݻ�J�,����7*;;[�����n�3g��x��E+W�TժUsfϯ�ū���� I���������ȑ#jӦ����)  � ;+K�����5�<���Pp�>Y��)�i��9��O�,�u�W�Zƫ������Q�qE�嚖�۲*U�h�ܹZ�j�J�,���������Y�z�!���9r���~mܸQS�L����V��N�:uٙ�ʕ++##C~��:w+W��O?��1�|�I5l�P���z��իW룏>��9�"�ŢE��C�rww�9��o߾zꩧ4iҤ<�  �#+3S��m�ɿ�*󰵌���S�%5���,R��C�u�7R��ԅ��.�f�p
�F���/���]�v����<�nݺ)>>���ּy���O��?T�F����_�\��)U��e��]��Ə�7�|S�F�ҭ�ުq��i���}M�z�4g��=Z���ʕ+��_~9��F�����K/��g�ս�ޫ�����G=z��?��nݺ]�q �����T���:�g����%�s;��_!��<e����:�)K��*]�����Q8e�[�0�C��$$$���G��������\jj�<���0������,Y�D�۷Wjjjβ��p����z��0a���� ����HW������d�,�s;�~@��<cSWŸTR�o���U骍T������(z��
`f�;p��q-X�@U�T)�r~��Y-_�\˗/��e�   ���4���Y����q�/��۩��
���w��Z��TV�o��וxcU��'��u�W؁:(11�P�rݺuu��Y���
/�� ��e��)f�F�޻N�ѿT2~��3��%#���-R��C.��P���*ԕ�ƪP���QƁb���;�q��B����BO  �MzZ�bvoЙ�뤸��ߥ����d��}�p��d��ke%��!�
u�X*�T�5�}@�FA   �BZj�bvo�)�~�;��ʖ��-R���*J*)��z*�X�+�Pu�8�+��   ��z>Y1�6��u��m�_�.gF��%+�@�� �e�����Lx�US
�8�kDA  @�����C;��܁�r8�E~���yHU�)���T�kU%�ՔKP=��h���j���`Nx E
   �FjJ��w�S�����mQ鄝
ΊQ�%;�@�tV%�VU�~��TOe#��\HUդ��I(�   (��''�Ў5:���mQ��]
ʊUD�e��Z�KՐ[p=��h��AUT�2�Q�  `���)f�Z%X/�c[�Sƍ�-�i��[U���)נ�
��Xe*T��0����?�+���#G�h���>|�)9�������Ku�Թ�cY,͟?_ݺu+�l  ؂���9e����'�VP�aU˧������+�T
��S`dS��e�
����<yR�G��?���Ǐ�dɒ�]��F���͛_�14t�P�?^=z�����Z�j�:u����߿�k[�j�+Vhܸqz��gs=ױcG-^�Xcƌ�رc�*KPP����T�t�%qqq*Y����-�  ���3�ٱF�����V$�R����̧��TIq���5�R_�#��?0T7�T (tؽ=z(==]S�NUŊu��q-[�L�O���c���(##C;vT�r�9CPP��L����9rD˖-���9::�lٲל�R���rqq���  P�ΝV̎UJ:�QNǷ�L�.GU��-�	��G�RKה{H=U��T��!�7#8 �����;wN���|�M�n�Z!!!jԨ�F��.]�䌋��Q׮]���%ooo�u�]:~��$iʔ)�Y��$�bŊ�X,4h�V�X�>�@�E�E��ї�ѩS'�:uJ+W���7u�T�m�V��N�6M
4P�%T�lY���W'N��y>::Z�E�7o�ٷb�
5j�H���*W���}�Yeff�<ߪU+
:TÇW�ҥծ];I�%�QQQ����0IRݺue�XԪU+����rvvֱc�re>|�Z�h�_�~  �[��S����Z3m�6��M�_����Uc�=j��=5H\� �$�J�/��Z��:I�ڮ��U������T���U:0��O 7�t�5///yyy)**JM�4���k�1���9�|Ŋ���ԣ�>�޽{k����ݻ����ԦM�[�NAAArww����5j��_�$��_�w�...�ׯ�&O����~ʔ)z뭷�,m����+�����p�8qB#F�РA��x��|�}��u��A�
��_�ݻwkȐ!rss�u�S�����K�K�[�N�5�/����ի���E~~~�X���M���#G��>}��z��~^  �E���ٱFI��zb��$�Vy�|�{L���W�My�4P��&*[��X�8����C�H)��u��,�����)S�hȐ!���OU�^=�l�Rw�}�jժ%IZ�l��mۦ�*((H����_�z��Z�~�6l�R�JI������]\\���q�����>�h�B|��6nܨ��xu��)OA���rW�XQ&LPÆ
���$//�<���O��>�H�E:z���y��=Z.rS�J�+�ꋿ`(U�T��4x�`M�<9��/\�P����뮻��s p�s��)v�*%Eo��ɭ*��G��q��g�QK��yD(-��<C�BdS�
��(�(踲�������J.�W5�G��ر�����Y�F?����z�-}��4h�v�ڥ����r.I������ծ]�԰a��\�vmU�REs���o��������)�b7n�رc�e��={V���{����(222��]�v�iӦ�\���͛+))I�Vpp�$�~��ו{РAz��f�5i�DS�L�]w�%Oϫ�� ���'��c�R�7���V�Kޭr:)�|����q�p��גWXE6U`�2�_ `�(�(���t�w�;�Ћ/����_cƌѠA�
5�}�ݧ�?�X;w�Ժu��<����v�ک]�v�>}�����v��)==����zu@@�:w�ɓ'+,,L?����/_~CY  E���ux�j�Do���m*��GeuJ%�{�RV�=#�p��Wo��~�*_���P�qe���l3��DFF�\�Z�j���Ulll�,�Ν;u�ܹ|g�/rqqQVV�5�o߾}��SO�v���{���:}���x㍜,6l��1�U��y���0��Y��+W�D��P��Ugsqq��|?���߯>}��B�
�T��Uߞ P4�:�#;�(��F��ܪ��=*��*���XK�NxE(=��J��WP�f�P�����P ��(�2�媗�������ի���>ժUK%J�І
��[o�k׮��6mڨf͚�ׯ���}eff�GQ˖-ՠA��;44Tk׮Utt�������s���,YRqqqrvv�����`�����?�C=��۷�W^��1y�����z��4t�P�ٳGcƌш#�3ϥ��~�I*T����||���i׮�����ꫯ�\ P<�:zH�w���C�~j�S�(@g��;<۰调��g���a
T���|K)(�# �v���K�7�{ｧ���+##CAAA2d��{�9I�[�-X�@�=��n��V988��;�ԇ~x�c?��S8p�"##u��y<xP��������������kʔ)z��4a�իWO��N�[��[���x�b�9R�kז����^x�?�\���I&L��/��ѣG�E�9K�4h� ����0`�5 `��l��;��;W�|�Fy�ڦ�������[�c��W�2�Ԗwņ
�l�`?�� ��a��!Px�����xy{{�z.55UTXX����LJ�={�(""B{��U�ʕ�}��'O��￿���� ������#�k��b6���6�?��J�\��Y�E��t�D5e��-�
�X^���]�(�R7�9�Alș3g4w�\y{{�����m۶iƌ�]� �1��u��~ݵFi1�yz�*��QY%�]Y�aQ�c�N��PV����P��+��G�f� �BAl�����q�FM�8Q�����]�vպu���C�;�(�� \#;[q1{ul�j��l�י����7�2�i8(�1X���)�lm�Tj���F
��V�)� ���ؐ����{rK5 �MFv���ѱ�k��I^���B�^*1Ͻ�3G�8�t�j2�ՑO�
�l�0/�8 �
:  �Ɍ�l�ޥc��(=v�J�ٮ���
Tr�e��S��xG�(WG%+7Rp�����J�� 
:  @!���ґ�;u|�e��e-��{U^)*���醣b�Bu�'RF�:��HA
T��Ô� �����<��?�?7 �WvV���ߦ��Sf�&�8�C�i{d9����醓9��w�T����4RpD}Uv��@qAAGgggIRJJ����MN{���"韟# (n����o�N�Y��#������[�-R��C�a:�)K�uf<8����r�J (�(�����(___�8qB����!��br*�:�0����'N���W���fG��.+3S��nщ��*��_�9�C���bIUȥ-R��C�uη��ȯJc��UU�¹[ �~PБKٲ֛�\,�����������$+3C�{���e�����W�%-O?o��s%��C�:*]�����*��Ŭ�  ;BAG.�E�ʕS@@�222̎;�����9�"!3#]������q�/��۩���
��+�ҁ)�pU�K%��Fʡ|]���XAUj+�2 �Nt���ё� (�2����/�ٻV�G7���NgP�%=���/��C.�_���ו��2��?�  ���  �"/#=M1�7���u2�����;�qP�,��n��
7r������T����6V�ʵT�2 ���?
  (R��R�{���]'#n��r�xf�2�d��ke%��!�
u�X*�T$��  &��  ������]tf�:)n���gF��%3�@�� źTQ�_
9�U@�ƪP���S� 6��  �B��d��ڠ�����Y~	���*���-R�<�j-�.�Lx�U�� l  ؜Ԕ$ڹN����%n�J%�Rpf���S���תJ�)��z*�D�����`Nx  �  ��|r��\����e9�U�v*8+F���-�Y�P�[U%�Րkp=��h�r�UT�2 ((�  �МOJС�kun�z9ۢ҉����|��y+�-\)���-�:3^6��JR� E  �ɉ�saf����'�RP�aEX��-�i��[U���)���*W��ʔ�(?�8 ��� ���pV�;�(��9�"���
�:�j���S���p���)��z
�l��r�*E st;3v�X���K�����k���&% 7��g�c�����
Hڥ
YG�-�'䧣��:_���C�|dS����9� �it;T�zu���/9�NN�1 n��s��c��n���
Hڭ 㨪�{��2~�#B��k�#���Wk��r�
0#8  v�fg����T�lY�c  ���3'ux�*%Fo��*��[�8��g�1�V�G�R�k�#���G6Q@� �8  7��n���ݫ��@����iӦ7n����͎u�R3��m�= P�R�O�Ȯ�J�� �[T&y������8�+�3Bi�5��@�7Uـ��W�  ,
��iܸ��L����p���饗^R�-�}�v�(Q"����4����l'$$f�+���*튳�< P\<����r�#���L�QK��yD(-���B�BdS��/�r&� ����ۙ����<�U��7n���͙3G��3~ܸqy.* (�s�NO:ϕ$���q��ԒWhE6Q`�
49#  ŕ�0Xcl�6l�6m�hܸqy��o=((H������.̘y�� 
��o��7$I�G˹�&' �)!!A>>>6�
`���KJJ����տ�|�wuu���k!��:nΎfG ���q҅r�6c�|���  y8� �橧�Ҋ+�U�V�{��rttT�>}̎ �E�!�����B9��e�r �Mb��>|X}����ӧ���[n�Ek֬������  ��b9��-�v�W�f���	  \��̚5��  {`ү�J�c�n���l���  �Q� (jCZ����x�v�qR�G��  � ���0�e/I�gݾ�
����f  W�� @Qa�/c��X�ۿ%5~��L  �Q� (
CZ����C�v�w�FC��  �	  {g��/H�?�nS� �Kt  �aHK���|l������~s3 ��BA �^���(i�D�v������	  \7
:  ��0�����~j������^S# �CA ������Һϭ۝'H���	  �0
:  ��0��#���$Y�.J����
   
:  �";[Z����KI��GR�{�N  
  {��--~R����c�n?�S �DA ��egK?<!m�"�"u�(��cv*  P�(�  ز�li�pi�TI���R���N  n
:  �*;[Z8L�k�dq��}*��mv*  p�P� �E����Ǥ������K�z��
  �Dt  lMv���c����r��IR͞f�  7  [��%-*m�!Y���=�N  
  [��%E="m�u��!���٩  @!�� `�����������R��f�  ��� �ٲ2����m�JNRϯ�Ȯf�  ��� ���2��J��^(瓥�.f�  &�� `��Li���y�r�k�T��٩  �I(�  �!+S��~i�|��Y�k����T  �Dt  
[V�4�~igԅr�����T  �dt  
SV�4o��s�����&��7;  �t  
KV�4�^i�B��E�k�~�٩  ���� P2ӭ�|�"k9�=]����T  ��P� ��r�sW���R�;�N  l ��)3]�v��g�r>C����T  �Q� �Y2Ӥ9�����>3�ʔs  �?
:  7Cf�4g���O���u���f�  6�� @A�H������l-�}fI�Z��
  �8
:  )#U�}��o���.��%Ulev*  `(�  ��Tiv?i�/��l�bK�S  ;AA � d��f����*9{H}�Ha-�N  � ��q^��G:𛵜��V
���T  ��P� ��)Ҭ>ҁ咳�r���T  �Q� �^�)�̻��+�����RH3�S  ;EA �z��H3{K�\��~s���f�  v�� ��JO�f�������{�I�M�N  � �k��,M�K:���R�B9olv*  PP� �ZiIҌ��C+���wRP#�S �"�� ��HK����bVI���=�IA
�N  �
:  �%-�B9_-��H��Kꛝ
  1t  �$-Q�����Z�̗�S� @��� p9�	���R�Z��G�%��gv*  PDQ� �Oj��M��:��W%�5;  (�(�  �[j��r��B9_ �1;  (�(�  \��9��IG6J�%��\m�S �b�� �E��IӺKG7](��K�j��
  t  $�����/��O��T��٩  @1BA ��Y��nR�fɣ�u�l
�S �b�� (�R�HӺIq[��|�B�Lu�S �b�� (�R�H_w��m�<J_(�f�  � P<�����"�&y�[�y@5�S �b�� (~�O[gΏo�<.���S �b�� (^�O[gΏo���A�$�p�S  P� �H�)ij��ɫ�4p��_��T   �$�������X,>|��Q ��%���v�P��J�~��  ����Z�~�>��3ժU��( `�.��.��ER�*f�  ȅt;����~��iҤI*Y���q ��%���v����3�s  `�(�v��GUǎզM�� �mK<.M�$��-��P�+��
   _,q�3�f�ҦM��~�����������턄��
 lK�1��SK�孷R+U��T   ��������?��ӧ�����^3n�8����|�� `�Yg�O�-yW��sN9  6�b�av\���(u��]���9����d�X��࠴��\�I�Ϡ)>>^��ޅ� 
MB������$� �̹_�٩  �9			������ۑ�o�]۶m˵��{�UDD��y�<�\�\]]���ZX�\	G�3�g�[���ER�P�S  \
�)Q��jԨ�k����J�*�g? ;�G�3�gH>�Ҡ��s  `W(�  �D��Q:{P�
�.�J���
  ��P������͎  �?l]�~���b]��lv*  �kFA دs��e�g�/��$_�V  � `���Xg����k>�ɧ�٩   � `��Μ���J�](���N  pC(�  �r��u�<>F�h� �  t ��8}���J~����4;  @��� �Ù�����r^��u�ܻ�٩   
���  �Og�3s^�
�  I̠ l���֙�#R����R��f�  (pt ��:��:s�xT*~���1;  �MAA ئ���)��8�?�Zν�N  p�P� ���>k9O:&�W�~O9  E� ؖS{�)��̜ �b�t ��8��4���t\
�n�9�,mv*  �BAA ؆�{��K>!��!
X@9  �
K� �;���r^S��9  (~�A ���.�}ΓOJe/�s?�S  :
: �<�wZ�y�)�l-�v�9  (�X� 0�����r�)�  �أ� 
߱헔�:R�(�9  (�X� (\ǶIS�H��H�u���%��f�  03� �����r^�:sN9  �DA ��-���y��f�}�N  `3X� ���n���*����7��'����
  ��0� �����O9���:sN9  ȃ� �y�l���7���Nr�6;  �Mb�; ��8�Q����/5��+��0;  �͢� 
��Ҵ�<����[�9  �`�; �`� M�v��7��  \%f� 'v�u�<=Q
i.��#�z��
  �.0� (��.)�\�9��  \-
: ��Ŭ�������͑\<�N  `WX� �1�VK�{J�IRحR�ْ��٩   �3� ��wh��M��%�  �P� �'z��MO)#Y��J�3�r  pX� �v�J�{I)R��R�����٩   �3� �ks���y��)�   �t ��;�B��[�</Un#��.9���
  �H` pu,����A9  (`̠ ���ߤ�wK��R��R�o$'W�S  )̠ �l�����v�s  ���t ���[&��#e�IU�KwM��  �$̠ ���yx鮯)�   7 ��ޥ�̾�yG��T����T   EK� ����4����.Et�zN��  
: �/�f�c-��:[˹��٩   ��� ���(ͺ0s^��  ��Q�Yzz���٣��L�� �?v/�f���3��nRϯ(�   ���^HRRR4x�`yxx�z�ꊉ��$=��cz�7LN�X���4g���W�.���r  `
z!5j��l٢�˗���-g�6m4{�l�(�v-�����!��r  `.WH���4{�l5i�D�%g��յ�~�(�v~/ͽW�Δj���&9�   �0�^HN�<����<����sv (;�S�k���  � 
z!iР�~�ᇜ틥��/�PӦM͊�8�%}{����M9  ���������j߾�v�ܩ��L}��ڹs�V�Z�+V�@q�c�4w�ddI�}"98��
   b���r�-ڲe�233U�fM����
��իU�~}��(�������C9  �1̠���=���z��5i�$�� (��͕�"�R�~R�)�   6��B���y��@q���K��=R��(�   6��^H�u릨�(�c (n�Α�?`-�u�_�9�~   [��BR�J����Z�r��ׯ/OO�\�6̤d ��-������� ���s   f1�0;Dqv��,�8P(9�����xy{{�{0��R�Ò�� ��{�s  ����0�^H<X Ǚ8q�&N����hIR���5z�h�o߾@���<C�zD�r~��q<�  ��/6���]�P�B���ڸq�6lؠ�n�M]�vՎ;
8% ���7����)�   v������Z5k֔������U�V-M�6횎ѹsgu��AU�TQժU��k����Kk֬�I�؍MӤC%R�����R�  �K�������/j�Сj޼�$��?��C=�S�N�'���cfee��o�Urr��6mZБؓ�S��.6����[��bn&   \.WH�����K/i����O�:Ucǎ��sԷmۦ�M�*55U^^^�1c�:t��ش�4����l'$$(((�A E��)��ǭ�?$���  �'.g{X�XH���ԬY�<��5k����k:Vxx�6oެ�k�������s��|ǎ7N>>>9_AAAו���0��r�0�  ��Q�I�ʕ5gΜ<�gϞ�*U�\ӱ\\\T�reկ__�ƍS�ڵ���;vԨQ����������� l��/�Eí��<"�9�r  `�8�����K�ݻ�~����s�W�\�e˖�[ܯEvvv�e�ruu����
�
Z7IZ���qӡR�W)�   v��^Hz�衵k����STT�$�Z�jZ�n��֭{��5j�ڷo���`%&&jƌZ�|��,Yr���9���f�Iw�B9  ((腨~����on�'N�Ѐ'ժUKK�,�w�Q@)ش��I?>m}�l�t�˔s  �"��^H/^,GGG�k�.��%K�(;;[�۷���|��7# {��S�g����ڌ��  !\$��<�����ʳ�0=��&$`WV�O9�e�  �b���ݻW���y�GDDh߾}&$`7V,-y���œ�m/R�  � f�����8�g��}����iB" vaՇ���[GR�  �0
z!�ڵ��������۷o��|�Iu����d l��	��/X�|Fj�<�  ������zK������PXX�����R�J�w�1; [�������[>+�~�r  P�qz!���ѪU��t�RmٲE���]��Z�hav4 ���Ҳ���[��Zq!I  ����l���Z�h�$�b��m۶
�;Ｃ=z�PZZ��)،?�����~�r  P�P�o��_~Y;v���޶m���;�C�>��.\�q�ƙ�����mi���ǭ_�Z>mn   *
�M�y�f�~��9۳f�R�F�4i�$�1B&LМ9sLL�&�xK��U���^�Z�47   
��dgϞU�2er�W�X�����l7l�P���fD`+��)-����1R���  �)�A��ʔ)��J���ӵi�&5i�$����D9;;���~�O9o3�r  P�Q�o�:��g����Q�F���#ו۷nݪJ�*���)C��ui���;^�ny��L   0K�o�W^yE����ԲeKyyyi�ԩrqq�y����R۶mML��],翿e�n����1s3  �t�0�C�����򒣣c��gΜ���W��~3%$$���G������.��p	ð^�w��m_��
57  (�����B����~??�BN�4�a��ڟ����IM17   l 
�aH�^��|Ϻ}�R����   �BA���0�_�H+?�n�Kj����   `s(� p3���EiՇ���H����	   6�� 7�aH?� ��ȺM9  �P��f0i��Қ���ߕ�on&   �4
: 4Ð~%��h������>s3  ��Q�� ��ӳ��O�۝ޗ�kj$   �
: Ð~|ZZ��u����@s3  �nP�� ��x��~�$���C�^�S  ��P��FegK���6|)�"u�H�{�٩   `g(� p#����OJ����,��gv*   �!
: \��l�'��S$Y�n�:}�N   ;EA�둝--.m�*�"u�T�}�٩   `�(� p�����ä��I�ۧR��f�  �������Ζ>&�����w�\����T   ((� p������6O����M�j�4;   �
: \��,i�Pi���(��$��av*   !t �/�YR�#��Y��R����
   E �$;K�zX�:�Z�{~)U�nv*   At ���L)�!i۷�����+)��٩   PDQ� ?Y�����s/���Rd�S  �����eeJ���ϳ��^S�j��N  �"�� ��ʔ��_�1_rp��*Et4;   �
: \��!ͻ_�u��-Et0;   �	
: H��`i�k9�=M
oov*   #t �ʐ��+�Z(9�HwM���4;   �
:��-3�Z�w/����ӥ�m�N  �b�����U�]���KU�0;   �)
:��)3]�v��g�r>C����T   (�(� ���4i�@��%'7k9�|�٩   P�Q�/�iҜ��?Y�y��R���N   P�#�Ҝ��ޟ/��YR��f�   $Q����{�}K%'w��,�b+�S   9(� ���Tiv?i�/��l�bK�S   �P�m�Y}���J�R�9RX�S   yP�]祙}��Y�y�o��[�N   䋂�hJO�f��,��=/���f�   .����IO�f�-\a-��̕B���
   �"
:��%=E��[:����%��+�45;   �(� ���diFo)�k9�g����T   �Uq0;  �\弄t�w�s   �f�ؿ�$i�]ҡ������54;   pM(� �[Z�4����Z��ϗ*40;   p�X��~�%J�{^(�>R�(�9   ��Ό7N
6T�%�nݺiϞ=f�
_Z��MO)f����/U�ov*   �Q��̊+�裏j͚5Z�t�222Զm[%''�
(<�	�7=��5���4 J*O9  �}��a����ɓ
Њ+t뭷��������(>>^��ޅ�(`���u������5;  �ݡ�.g����%I~~~&'
Aj��r��B9_ �1;   P (�v,;;[ÇW���U�F�|Ǥ��)---g;!!�����9��IG6J�%��\m�S   �s��أ�>��۷k֬Y�3n�8����|bB���?'M�~I9��r  �"�s���СC�`�����
���fЃ��8����Yk9?����'
�^*[��T   v�s�mK��az��4�|-_����\�\]]���ZH�v���u7)n��Q�:s^6��9    {GA�3�>��f̘��D�:v�$���G���&�
P�iZ7)n���\(��nv*   �a����X,��<y�
���g�B���ұ��G��<��T   E
���0�ng�}
���3��]�c�$Ok9�fv*   ণ��ɧ�3�ǷI��y�٩   �BAA`�O[gΏo���A�$�p�S   ����|ɧ��]�;$�2��E�U�S   ����\I'�3�'vJ^e�3祫��
   (tt �I:)M�,��E9  @�GA`����n�D9��ҕ�N   �����%���S{��֙�R��N   ����  ���c��N�r�]�r   \�:�xL��I:�W� 
Z(�U4;   `(� 
GB�u���>�'H�P�3;   `3(� n���֙�3���|�"�d�٩    ��9� n��#Ҕ��y0�   �f��<��ك�o��Vj%C�N   �$f���/)�!Ҡ(�   �0������^�l�?��7��T   �M��(X�b��;w�z���$�
f�   l@�9{�:s~.F*v���7;   `(� 
��C֙��ɯ���p�s   �Q�ܸ���y��W�z+5�@�S   v���Ɯ9(M�l-�*[gν˙�
   �;�f
��;s����RU(�   �
`��9��:s�pD*]U�P*Q��T   �ݢ��v��[g��J��/��2f�   ���9�_��QJ���#���+��T   �ݣ��z��Y�y�1ɿ�4�{�9   P@�H��sj�?�< ��s   ��1�࿝�[��IJ:.T�Μ{�6;   P�P�\��=��%���Ԑ,��   7K�\މݗ��� f�  ���t �;��z���R������T   @�EA����r�rJ*[˺��r   �T,q������r�)�   @!���Ǳ헔�:R�(�9   PHX����6ij��)�����^��T   @��: )n�%弞u�r   *
:P��m���P��׿0s�kv*   ��a�;P��,}�UJ='�o ��Nr�1;   P,1�WG����Whh�9��   ����ёM���F�=�In�f�   �5���͑���ݥ�x)��t�\ɵ�٩   �b��'�7J�.���R�o)�   ��`�;P\� M�v��7��   6�t�8�]o�9OO�B�K}�H�^f�   p	fЁ�.v�%���3�s   ��PЁ�,f�?�<���o���iv*    �`�;PTZ-M�)�'Ia�J}fK.f�   p̠EѡU�7=.��s   �PЁ�&z��MO)#Y��J�3�r   ���EI����^RF�T���g���nv*    W�t��8��?���s   ��0�VH3zK���m���%g7�S   �̠����K���s   �N1�س��I3�2S�*m���HN�f�   p�A���_/)��(�   ��c�G��I3�HYiR���]S)�   ��c�7�~����w����r   t���]*��{��w�zM��\�N   � ����,��'e�K����)�   @BA���K���X�y���r��lv*    �%�v���W�Ν(�Ţ��(�#�f��4���y�.�s   ����ۙ��dծ][���QPv/�f���3��nRϯ(�   @�w;Ӿ}{�o���(�������ݥ�}!9�,   PT1�آ]��9��F�9   P�/�".--Miii9�			&��UٵP�v���)��)u��r   ̠q�ƍ���O�WPP�ّp%;�S�k���   ���5j����s�bcc͎���%}{�����M9   ���_Ĺ��������/;�KsKF�T�n��'���٩    "
��IJJҾ}�r�<�͛7���O���&&�u�>O�7�Z�k���~D9   �!
��ٰa�Z�n��=b�I���5e��R�m�+}7D2��:��.R�  �b��ngZ�j%�0̎����[i��r^�����    �+� `��s.)��)�    (�@��2[������ u�@9   @A
��������NP�   H���g�)�aI���>��{�s    9h@a��)�Y��`�û�s    �pw�f�4M��1I��p���m�b1;    �p3m�*}?T�!5z�r   �(��Ͳq��p��q㇤�oQ�   \�6L�>n}��a��7(�    �����_J��[7yT�s�   ���i�$���M�J�^��   �*t����$-~����cR�W)�    �(k?���7\���9   �kBAnԚO���>n>\j��   �5s2; `�V"-e}|���єs    ׅ�\��KK��>n�t��s    ׍�\�UJ?�`}|�H���s    7��\����/Z�|Fj5�r   ��QЁk����/c��[>+�ej    E�Z����d}�j���Ys�    (R(�����]i���ǭ��Z>mn    E�/��-�����m/X/
    ��\Ɋ���^�>��E�֧��   �Ȣ����Mi���Ƿ��Z�07   �"����qҊ7��ۼ$�2��8    �>
:p)Ð���V�iݾ�e����f   P,PЁ�C��u�����m_��=fn&    ������W�?ޱn�{]j����    +t�0��8�s�u��8��#�f   P�P�Q����%�����w�!5y��L    �%
:�/Ð~#������-���f   PlQ�Q<���EiՇ���H����	   @�FAG�c��/H�?�nS�   � 
:�Ð�</��غ��]����f    Q�Q����(i�D�v������	    .���x0�g���Z�;�/5���H    p)
:�>Ð~|ZZ��u����@s3   ��P�Q���x��~�$���C�^�S   @t]���⧤
_J�H]?���cv*    �ESv���Ii�W��󏥺��N    �EAGѓ�-����q�$��m�T��٩    ��(�(Z���EåMS%Y��J��6;    �'
:���li�0�i��A���T��٩    �P�Q4dgK����Zλ.��ev*    �jtؿ�,��Ǥ�ӭ�����=�N    ׄ����%-*m�!Y���=�N    ׌����%E="m�u��!���٩    �P�a������������R��f�   ��FA���ʔ���}+98I=��"���
    n�%+S����}�r>Y��bv*    �at؏�Li���y�r�k�T��٩    �@P�a�2���v̗����J�N    ��ۗ�!ͻ_�u��-Et0;    (
:l[V�4o��s�����&��7;    8
:lWV�4�^i�B��E�k�~�٩    ঠ��6e�[���E�r�{�T��٩    ড����*���ӥ*w��
    n*
:lKf���@i���|�T��٩    ণ��vd�IsJ�(9�Y�y���N    ���� �v��BCC���ƍkݺufG�q�iҜ���>3)�    �
���={�F��1c�hӦM�]��ڵk�'N���e�J�����B9�%U���T    P�(�vf���2d���^EFF��O?�������+��]���|�ϒ���w�T��٩    ��Q��Hzz�6nܨ6m��h����ڴi�իW���:e�J��I���S�+�2;    ����ّS�N)++Keʔɵ�L�2ڽ{w��IKKSZZZ�vBB�M�x�2R�Y}���$g��)��٩    �4̠q�ƍ���O�WPP�ّrs���}K9   P�Q��H�ҥ����Ǐ����q�-[6�׌5J���9_������9_��ڽ?J����    LGA�#...�_���-[��/;;[˖-SӦM�}�������s}�g7)���)    �&p��1b��
�Q�Fz�������{���h    �@A�3�{��ɓ'5z�h;vLu���O?����q     �b1�0;
OBB�|||o[��   *����t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      �dv .�0$I			&'   `����bG��(��Lbb�$)((��$    lAbb�|||̎I�_�+���:z��J�(!��bj���)66V��ަf�↿������aJLLT``�8��0�^�888�B�
f��������� ����` 0�����̹m��$     � 
:     6��Ӹ��j̘1ruu5;
 ;� ���_\	�    �0�    �
��    `(�     � 
:     6���B��￫s��
��bQTT�ّ �X7n�6l�%J(  @ݺuӞ={̎ E�ĉU�V-y{{���[M�6Տ?�hv,� 
:
]rr�j׮��?���( P��X�B�>��֬Y��K�*##Cm۶Urr��� �H�P���x�
mܸQ6l�m�ݦ�]�jǎfG���6k0��b����խ[7�� @�s��IhŊ���[͎ Ŋ����~�m
<��(�!Nf   戏��d�G" �pdee��o�Urr��6mjv�
:  �Pvv����͛�F�f��"o۶mjڴ�RSS������+22��X�1t  ��G}T۷oן�iv (��õy�f���k�ܹ8p�V�XAIG.t  ���C�jѢE����U�B�� @����ʕ+K��ׯ�����>�g�}fr2�
:  ńaz��4�|-_�\aaafG�b+;;[iiifǀ�����%%%i߾}9���͛�����`�@��裏jƌZ�`�J�(�cǎI�|||���nr: (�F�����+88X����1c��/_�%K��
6�۬��-_�\�[�γ����2eJ��b�b�����4hP��bd���Z�l�������Z�j�g��w�av4�
:     6���      ��    �M��    `(�     � 
:     6��    �
��    `(�  ���j�JÇ7;  v�� �4h�,�,�������~Z���fG  ���   ���y睚<y�222�q�F
8P�Eo�����  @`  ;��ꪲe�*((HݺuS�6m�t�RIRZZ��
��� ����[n����s^;e�����:^TT�,K��رcU�NM�6M��������w߭��Ĝ1���0`����T�\9���7�C P�P� �C۷oתU����"Iz��5o�<M�:U�6mR�ʕծ];�9s暎��~EEEiѢEZ�h�V�X�7�x#���#GjŊZ�`�~��g-_�\�6m*�� @qEA �N,Z�H^^^rssS͚5u��	�9R��ɚ8q��~�m�o�^����4i������_^�{dggkʔ)�Q��Z�h����kٲe����$}��z�wt����f͚�:u�233o�� ���t  �D�֭5q�D%''��ޓ���z�衭[�*##C͛7����F�i׮]�����*Q�D�v�r�t��	I�����t5n�8�y???�����'    ����ʕ+K����+ծ][_~��6l���upp�a��edd����k�b�(;;�R ���w  쐃���{�9����T��\\\�r�ʜ�322�~�zEFFJ�����������1�7o����T������v�ڜ}gϞ���}c  H�� `�z��%GGGM�8Q?��F���~�I;w�Ԑ!C������K�7n,=��sڿ�f̘�)S�\��yyyi���9r�~��Wm߾]�
����  � ��  ;��䤡C�ꭷ�����������+11Q
4В%KT�dII�sſ���9R�&M���߮�c�����|�������Ν;�D�z��'3>  Ŏ���	i     �б&
     @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      @A    �P�    �t     l      ��7FK��wN    IEND�B`�

--- File: docs/.project_structure_ignore ---


--- File: helper_functions/fixed_strategies.py ---
import random

def tit_for_tat(opponent_history):
    """Replicates the opponent's last action. Cooperates on the first move."""
    return opponent_history[-1] if opponent_history else 'COOPERATE'

def suspicious_tit_for_tat(opponent_history):
    """Replicates the opponent's last action. Defects on the first move."""
    return opponent_history[-1] if opponent_history else 'DEFECT'

def forgiving_tit_for_tat(opponent_history, forgiveness_probability=0.05):
    """Like Tit for Tat, but occasionally forgives by cooperating even after a defection, based on a specified probability."""
    if not opponent_history or opponent_history[-1] == 'COOPERATE' or random.random() <= forgiveness_probability:
        return 'COOPERATE'
    return 'DEFECT'

def defection_sensitive_tit_for_tat(opponent_history, shift_threshold=5):
    """
    Cooperates on the first move, then mirrors the opponent's last move, but switches to consistent defections
    once a threshold of opponent defections is reached.
    """
    if not opponent_history:
        return 'COOPERATE'
    if opponent_history.count('DEFECT') > shift_threshold:
        return 'DEFECT'
    else:
        return opponent_history[-1]

def tit_for_two_tats(opponent_history):
    """Defects only if the opponent has defected in the last two consecutive rounds."""
    return 'DEFECT' if opponent_history[-2:] == ['DEFECT', 'DEFECT'] else 'COOPERATE'

def grim_trigger(opponent_history):
    """Cooperates until the opponent defects once, after which it always defects. (Also known is Friedman Strategy)"""
    return 'DEFECT' if 'DEFECT' in opponent_history else 'COOPERATE'

def always_cooperate(opponent_history):
    """Always cooperates"""
    return 'COOPERATE'

def adaptive_strategy(opponent_history):
    """
    Adapts its action based on the relative frequency of cooperation versus defection by the opponent to allow 
    mutual cooperation while being protected from exploitation.
    """
    if not opponent_history:
        return 'COOPERATE'
    cooperate_count = opponent_history.count('COOPERATE')
    defect_count = opponent_history.count('DEFECT')
    if cooperate_count + defect_count != len(opponent_history):
        raise ValueError("Adaptive Strategy not working as expected.") # Not for prod
    if cooperate_count > defect_count:
        return 'COOPERATE' 
    else:
        return 'DEFECT'  
    
def soft_majority(opponent_history):
    """Cooperates if the majority of actions by the opponent were cooperative, otherwise defects."""
    return 'COOPERATE' if not opponent_history or opponent_history.count('COOPERATE') > len(opponent_history) / 2 else 'DEFECT'

def hard_majority(opponent_history):
    """Defects initially and then follows the majority action of the opponent."""
    return 'DEFECT' if not opponent_history or opponent_history.count('COOPERATE') <= len(opponent_history) / 2 else 'COOPERATE'

def random_strategy(_):
    """Randomly chooses between cooperating and defecting."""
    return random.choice(['COOPERATE', 'DEFECT'])

def betrayal(opponent_history, betrayal_turn=5):
    """Builds trust by cooperating and then strategically defects at a specific turn."""
    return 'COOPERATE' if len(opponent_history) < betrayal_turn else 'DEFECT'


--- File: helper_functions/plot_strategy_score.py ---
import pandas as pd
import matplotlib.pyplot as plt
import os

def plot_strategy_score(file_path, graphs_dir):
    os.makedirs(graphs_dir, exist_ok=True)
    
    data = pd.read_csv(file_path)
    
    plt.figure(figsize=(10, 6))
    for strategy in data['Agent Name'].unique():
        strategy_data = data[data['Agent Name'] == strategy]
        plt.plot(strategy_data['Round'], strategy_data['Score'], label=strategy)
    
    strategy_names = data['Agent Name'].unique()
    title = f"{strategy_names[0]} vs {strategy_names[1]}"
    
    plt.title(title)
    plt.xlabel('Round')
    plt.ylabel('Score')
    plt.legend(title="Strategies")
    
    max_round = data['Round'].max()
    plt.xticks(range(1, max_round + 1))  
    
    plot_filename = f"{title.replace(' ', '_').replace('.', '')}.png"
    plt.savefig(os.path.join(graphs_dir, plot_filename))
    plt.close() 


--- File: helper_functions/sanitize_file_name.py ---
from slugify import slugify

def sanitize_filename(filename):
    return slugify(filename)


--- File: helper_functions/save_message_history.py ---
import os
import datetime
from helper_functions.sanitize_file_name import sanitize_filename


def save_message_history(agent, opponent_name, directory):
    
    current_time = datetime.datetime.now()
    formatted_time = current_time.strftime("%Y-%m-%d-%H:%M")
    filename = sanitize_filename(f"{agent.config.name}_message_history_{formatted_time}") + '.txt'
    file_path = os.path.join(directory, filename)
    
        
    with open(file_path, 'w') as file:
        
        separator = '-' * 80
        file.write(f"LLM history for {agent.config.name} playing against {opponent_name}\n\n")
        file.write(separator + "\n\n")
        
        for message in agent.llm_messages:
            message_str = ', '.join([f"{key}: {value}" for key, value in message.items()])
            file.write(message_str + "\n\n")
            file.write(separator + "\n\n")

--- File: models/agent_config.py ---
from pydantic import BaseModel, validator
from typing import Optional, Callable, List, Any

class AgentConfig(BaseModel):
    name: str
    agent_type: str
    fixed_strategy: Optional[Callable[[List[Any]], str]] = None
    llm_model: Optional[str] = None
    llm_personality: Optional[str] = None
    score: int = 0

    @validator('agent_type')
    def check_agent_type(cls, value):
        valid_types = ['fixed', 'llm', 'human']
        if value not in valid_types:
            raise ValueError(f"agent_type must be one of {valid_types}")
        return value

    @validator('llm_model')
    def check_llm_model(cls, value,values):
        if values['agent_type'] == 'llm':
            valid_models = ['gpt-3.5-turbo', 'gpt-4-turbo']
            if not value:
                raise ValueError("llm_model is required for agent_type 'llm'")
            if value not in valid_models:
                raise ValueError(f"llm_model must be one of {valid_models}")
        return value

    @validator('llm_personality')
    def check_llm_personality(cls, value, values):
        if values['agent_type'] == 'llm':
            valid_personalities = ['selfish', 'altruistic']
            if not value:
                raise ValueError("llm_personality is required for agent_type 'llm'")
            if value not in valid_personalities:
                raise ValueError(f"llm_personality must be one of {valid_personalities}")
        return value


--- File: prompts/choice_prompt_with_reasoning.py ---
choice_prompt_with_reasoning = """
Please choose 'COOPERATE' or 'DEFECT' for this round.
First, briefly reason about what would be the optimal choice.
Then output your decision on the last line, either 'COOPERATE' or 'DEFECT'.
"""

--- File: prompts/choice_prompt_without_reasoning.py ---
choice_prompt_without_reasoning = """
Please choose 'COOPERATE' or 'DEFECT' for this round.
Answer only with a single word reflecting your choice.
"""

--- File: prompts/game_description.py ---
game_description = """
Welcome to the Iterated Prisoner's Dilemma Game! In this game, you will make a series of decisions across multiple rounds, choosing whether to COOPERATE or DEFECT in each interaction with another player. The outcome of your decisions will affect not only your own score but also that of your opponent, based on the following payoff matrix:

COOPERATE-DEFECT: If you cooperate and your opponent defects, you will score 0 points while your opponent scores 5 points.
DEFECT-DEFECT: If both you and your opponent choose to defect, each of you will score 0 points.
COOPERATE-COOPERATE: If both you and your opponent cooperate, each of you will score 3 points.
Your decisions and their consequences will accumulate over the rounds.

Rules of the Game:

1. Rounds: The game will consist of an undefined number of rounds.
2. Decision Making: In each round, you must choose to either "COOPERATE" or "DEFECT." You will make your choice simultaneously with your opponent, without knowledge of their decision.
3. Scoring: After each round, points will be awarded based on the choices made by you and your opponent according to the payoff matrix.
4. Strategy: You are encouraged to develop a strategy based on the outcomes of previous rounds. Pay close attention to your opponent's past behavior, as it may give you insights into their future actions.
"""

--- File: prompts/personalities/altruistic_personality_message.py ---
altruistic_personality_message = 'You are an altruist. Your decisions should be to maximize the total score of both players.'


--- File: prompts/personalities/custom_personality_message.py ---
custom_personality_message = "You are an... (Write your own custom personality message here.)"

--- File: prompts/personalities/selfish_personality_message.py ---
selfish_personality_message = 'You are selfish. Your decisions should aim to maximize your own score.'

--- File: scripts/llm_log.txt ---
Cooperate
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
Cooperate
-----------------------------------------------------------------------
COOPERATE.
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
COOPERATE
-----------------------------------------------------------------------
As an altruist, the optimal choice would be to cooperate in order to maximize the total score for both players. By choosing to cooperate, both players can earn 3 points each in this round, which is better than the alternative outcomes if one or both players were to defect.

Decision: COOPERATE
-----------------------------------------------------------------------
Given that both players cooperated in the previous round and earned 3 points each, it would be beneficial to continue cooperating to maintain the mutual benefit and maximize the total score for both players.

Decision: COOPERATE
-----------------------------------------------------------------------
Considering that cooperation has led to mutual benefit in the past rounds, it would be in the best interest of both players to continue cooperating to maintain a high total score.

Decision: COOPERATE
-----------------------------------------------------------------------
In the Iterated Prisoner's Dilemma game as a selfish player, the optimal choice would depend on the past behavior of the opponent. If the opponent has consistently cooperated in previous rounds, it might be beneficial to also cooperate to maintain the mutual cooperation and earn 3 points. However, if the opponent has defected in the past, it might be better to defect to avoid scoring 0 points while the opponent scores 5 points.

Based on this reasoning, my decision for this round is:

DEFECT
-----------------------------------------------------------------------
Based on the outcome of the previous round where my opponent chose to cooperate and I chose to defect, I received 5 points while my opponent received 0 points. Since my goal is to maximize my own score, it seems like my opponent is currently leaning towards cooperation.

Given that information, it may be beneficial to cooperate in this round to continue building a cooperative relationship and earn 3 points rather than risking the 0 points by defecting when the opponent might be cooperating.

Based on this reasoning, my decision for this round is:

COOPERATE
-----------------------------------------------------------------------
Based on the outcomes of the previous rounds, it appears that my opponent's choice is not entirely predictable. In the first round, my opponent cooperated, and in the second round, they defected. Both rounds resulted in a tie with both of us receiving 5 points.

Since there is no clear pattern to my opponent's choices yet, it might be strategic to stick with cooperation in this round. By continuing to cooperate, I have a chance to earn 3 points in the case of mutual cooperation. Even if my opponent defects, I will still earn 0 points which is better than the 0 points from a mutual defection.

Based on this reasoning, my decision for this round is:

COOPERATE
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT  
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
Defect
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
DEFECT
-----------------------------------------------------------------------
The optimal choice for this round depends on your opponent's past behavior. If your opponent has consistently cooperated in previous rounds, it might be beneficial to cooperate again to maintain a positive relationship and continue earning 3 points. However, if your opponent has defected multiple times, it could be advantageous to defect this time to avoid getting scored 0 points while they score 5 points.

Decision: **DEFECT**
-----------------------------------------------------------------------
Based on the previous round where my opponent chose to cooperate, it seems beneficial to reciprocate cooperation to continue earning 3 points for both of us. This might encourage my opponent to cooperate in future rounds as well.

Decision: **COOPERATE**
-----------------------------------------------------------------------
Given that my opponent defected in the previous round, it might be strategic to also defect this time to prevent them from gaining an advantage over me. This decision could potentially convey a message that I will retaliate against defection.

Decision: **DEFECT**
-----------------------------------------------------------------------


--- File: scripts/multiple_sims.py ---
import os
from dotenv import load_dotenv

from utils.simulation import simulate_prisoners_dilemma

from agent_configs.human_agent_config import human_agent
from agent_configs.llm_agent_configs import (
    selfish_gpt_4_turbo_agent, altruistic_gpt_4_turbo_agent, altruistic_gpt_35_turbo_agent, selfish_gpt_35_turbo_agent 
)
from agent_configs.fixed_strategy_agent_configs import (
    tit_for_tat_agent, suspicious_tit_for_tat_agent, forgiving_tit_for_tat_agent,
    defection_sensitive_tit_for_tat_agent, tit_for_two_tats_agent, grim_trigger_agent,
    always_cooperate_agent, adaptive_strategy_agent, soft_majority_agent,
    hard_majority_agent, random_strategy_agent, betrayal_agent
)

from prompts.choice_prompt_without_reasoning import choice_prompt_without_reasoning
from prompts.choice_prompt_with_reasoning import choice_prompt_with_reasoning

load_dotenv()
iterations = int(os.getenv('ITERATIONS'))

# Define matchups
matchups = [
    (adaptive_strategy_agent, betrayal_agent),
    (tit_for_tat_agent, always_cooperate_agent),
    (suspicious_tit_for_tat_agent, grim_trigger_agent)
]

# Running the simulations
for config_a, config_b in matchups:
    simulation_results = simulate_prisoners_dilemma(config_a, config_b, iterations, choice_prompt=choice_prompt_without_reasoning)


--- File: scripts/single_sim.py ---
import os
from dotenv import load_dotenv

from utils.simulation import simulate_prisoners_dilemma

from agent_configs.human_agent_config import human_agent
from agent_configs.llm_agent_configs import (
    selfish_gpt_4_turbo_agent, altruistic_gpt_4_turbo_agent, altruistic_gpt_35_turbo_agent, selfish_gpt_35_turbo_agent 
)
from agent_configs.fixed_strategy_agent_configs import (
    tit_for_tat_agent, suspicious_tit_for_tat_agent, forgiving_tit_for_tat_agent,
    defection_sensitive_tit_for_tat_agent, tit_for_two_tats_agent, grim_trigger_agent,
    always_cooperate_agent, adaptive_strategy_agent, soft_majority_agent,
    hard_majority_agent, random_strategy_agent, betrayal_agent
)

from prompts.choice_prompt_without_reasoning import choice_prompt_without_reasoning
from prompts.choice_prompt_with_reasoning import choice_prompt_with_reasoning


load_dotenv(verbose=True)
iterations = int(os.getenv('ITERATIONS'))
datasets_directory = os.path.join('..', 'data/datasets')
graphs_directory = os.path.join('..', 'data/graphs')

final_results = simulate_prisoners_dilemma(config_a = hard_majority_agent, config_b = soft_majority_agent, iterations=iterations, choice_prompt=choice_prompt_with_reasoning)

print(final_results)

--- File: to-do.md ---
1. Build interface
   1. Users should be able to choose matchups and setups of strategies
   2. Implement possibility for custom strategies that just needs to return either defect or cooperate

2. Add more LLM models
3. ENV variables for PAYOFF matrix

--- File: utils/__init__.py ---


--- File: utils/agent.py ---
import random
import re
import logging
import os
from models.agent_config import AgentConfig
from openai import OpenAI

from prompts.personalities.custom_personality_message import custom_personality_message
from prompts.personalities.selfish_personality_message import selfish_personality_message
from prompts.personalities.altruistic_personality_message import altruistic_personality_message
from prompts.game_description import game_description
class Agent:
    """
    Represents an agent in the Prisoner's Dilemma game.

    Attributes:
        config (AgentConfig): The configuration object for the agent.

    Methods:
        __init__(self, config: AgentConfig): Initializes the Agent object.
        decide_action(self): Makes a decision on the next action to take.
        get_decision_fixed_agent(self): Gets the decision for a fixed agent.
        get_decision_human_agent(self): Gets the decision for a human agent.
        get_decision_llm_agent(self): Gets the decision for an LLM agent.
        query_llm(self): Queries the LLM model for a decision.
        extract_decision(self, response): Extracts the decision from the LLM response.
        log_decision(self, response): Logs the LLM response to a file.
    """

    def __init__(self, config: AgentConfig, role: str, choice_prompt: str):
        """
        Initializes a new instance of the Agent class.

        Args:
            config (AgentConfig): Configuration settings for the agent.
            role (str): The role of the agent ('Agent A' or 'Agent B').
        """
        self.config = config
        self.role = role
        self.llm_messages = []
        self.choice_prompt = choice_prompt

    def decide_action(self, game_history, opponent_score):
        """
        Determines the action to be taken by the agent based on its type.

        Returns:
            str: The decision of the agent ('COOPERATE' or 'DEFECT').

        Raises:
            ValueError: If an unknown agent type is provided in the configuration.
        """
        if self.config.agent_type == 'fixed':
            return self.get_decision_fixed_agent(game_history)
        elif self.config.agent_type == 'human':
            return self.get_decision_human_agent()
        elif self.config.agent_type == 'llm':
            return self.get_decision_llm_agent(game_history, opponent_score)

    def get_decision_fixed_agent(self, game_history):
        """
        Executes the fixed strategy of the agent to decide an action.

        Returns:
            str: The decision of the agent based on a predefined strategy.

        Raises:
            ValueError: If no fixed strategy is set in the configuration.
        """
        if not self.config.fixed_strategy:
            raise ValueError("Fixed strategy not set")
        
        opponent_role = 'Agent B' if self.role == 'Agent A' else 'Agent A'
        opponent_history = [round[opponent_role] for round in game_history if opponent_role in round]
        return self.config.fixed_strategy(opponent_history)
    
        
    def get_decision_human_agent(self):
        """
        Collects a decision input from a human user through the console.

        Returns:
            str: The validated input from the user, either 'COOPERATE' or 'DEFECT'.

        Notes:
            Continuously prompts until a valid input is received.
        """
        valid_choices = ["COOPERATE", "DEFECT"]
        while True:
            user_input = input("Enter your decision (COOPERATE/DEFECT): ")
            if user_input.strip().upper() in valid_choices:
                return user_input.strip().upper() 
            else:
                print("Invalid input. Please enter 'COOPERATE' or 'DEFECT'.")

    def get_decision_llm_agent(self, game_history, opponent_score):
        """
        Utilizes a language model to determine the agent's decision.

        Returns:
            str: The decision inferred from the language model response.

        Notes:
            Defaults to a random choice if no model is configured.
        """
        response = self.query_llm(game_history, opponent_score)
        decision = self.extract_decision(response)
        self.log_decision(response)
        return decision

    def query_llm(self, game_history, opponent_score):
        """
        Queries a language learning model to get a decision based on the game's history.

        Returns:
            str: The content received from the model's response.

        Raises:
            ValueError: If the personality is not set for an LLM agent type.
            Exception: General exceptions are re-raised after logging.
        """
        if self.config.llm_model in ['gpt-3.5-turbo', 'gpt-4-turbo']:
            client = OpenAI()
        
        personality_prompts = {
            'selfish': selfish_personality_message,
            'altruistic': altruistic_personality_message,
            'custom': custom_personality_message
        }
        

        if len(game_history) == 0:
            self.llm_messages.append({"role": "system", "content": game_description + '\n\n'  + personality_prompts[self.config.llm_personality]})
        
        if len(game_history) > 0:
            opponent_role = 'Agent B' if self.role == 'Agent A' else 'Agent A'
            self.llm_messages.append({
                "role": "user",
                "content": (
                    "Your opponent chose to " + str(game_history[-1][opponent_role]) +
                    "'\n\n' The new score is: You: " + str(self.config.score) + " Opponent: " + str(opponent_score) + "."
                )
            })
        
        self.llm_messages.append({"role": "user", "content": self.choice_prompt})
        
        try:
            response = client.chat.completions.create(
                model = self.config.llm_model,
                messages=self.llm_messages
            )
            
            self.llm_messages.append({"role": "assistant", "content": response.choices[0].message.content})
            
            return response.choices[0].message.content
        
        except Exception as e:
            print(f"Error: {e}")
            raise

    def extract_decision(self, response):
        """
        Extracts the decision from the given response string using regular expressions,
        specifically retrieving the last occurrence of 'COOPERATE' or 'DEFECT'.

        Args:
            response (str): The raw response string from an LLM query.

        Returns:
            str: The last 'COOPERATE' or 'DEFECT' found in the response; defaults to a random choice if no match is found.
        """
        matches = re.findall(r'COOPERATE|DEFECT', response)
        return matches[-1] if matches else random.choice(["COOPERATE", "DEFECT"])

    def log_decision(self, response):
        """
        Logs the decision response to a file.

        Args:
            response (str): The response to be logged.

        Notes:
            Appends the response to 'llm_log.txt' with a separator for clarity.
        """
        with open("llm_log.txt", 'a') as log_file:
            log_file.write(f"{response}\n-----------------------------------------------------------------------\n")
            
    def update_score(self, own_action, opponents_action):
        """
        Updates the agent's score based on the outcome of the last round in a Prisoner's Dilemma game.

        Args:

            own_action (str): The action taken by the agent in the last round ('COOPERATE' or 'DEFECT'
        
            opponents_action (str): The action taken by the other agent in the last round ('COOPERATE' or 'DEFECT').

        Raises:
            ValueError: If the history is empty, which implies that there's no previous action to reference, or if the agent's name does not exist in the last entry of the history.
        
        Notes:
            This method directly modifies the `score` attribute of the agent based on the outcome of the interactions as per the rules of the Prisoner's Dilemma. The score changes are logged to the console.
        """

        score_map = {
            ('COOPERATE', 'COOPERATE'): 3,  # Mutual cooperation
            ('COOPERATE', 'DEFECT'): 0,     # You cooperate, other defect
            ('DEFECT', 'COOPERATE'): 5,     # You defect, other cooperate
            ('DEFECT', 'DEFECT'): 1         # Mutual defection
        }

        action_pair = (own_action, opponents_action)
        self.config.score += score_map[action_pair]

        print(f"New score for {self.config.name}: {self.config.score}")


--- File: utils/simulation.py ---
import csv
import os
import datetime
from helper_functions.sanitize_file_name import sanitize_filename
from helper_functions.plot_strategy_score import plot_strategy_score
from helper_functions.save_message_history import save_message_history
from utils.agent import Agent
from models.agent_config import AgentConfig 


def setup_directories(base_path='../data'):
    """Sets up necessary directories for storing simulation data."""
    data_directory = os.path.join(base_path, 'datasets')
    graphs_directory = os.path.join(base_path, 'graphs')
    llm_message_history_directory = os.path.join(base_path, 'llm_message_history')
    
    os.makedirs(data_directory, exist_ok=True)
    os.makedirs(graphs_directory, exist_ok=True)
    os.makedirs(llm_message_history_directory, exist_ok=True)

    return data_directory, graphs_directory, llm_message_history_directory

def simulate_prisoners_dilemma(config_a: AgentConfig, config_b: AgentConfig, iterations: int, choice_prompt: str):
    # Dictionary to track the results of each type of outcome
    results = {
        "COOPERATE-COOPERATE": 0,
        "COOPERATE-DEFECT": 0,
        "DEFECT-COOPERATE": 0,
        "DEFECT-DEFECT": 0
    }
    
    game_history = []

    agent_a = Agent(config_a, role="Agent A", choice_prompt=choice_prompt)
    agent_b = Agent(config_b, role="Agent B", choice_prompt=choice_prompt)

    data_directory, graphs_directory, llm_message_history_directory = setup_directories()
    
    current_time = datetime.datetime.now()
    formatted_time = current_time.strftime("%Y-%m-%d %H:%M")
    filename = sanitize_filename(f"sim_{agent_a.config.name}_vs_{agent_b.config.name}_{formatted_time}") + '.csv'
    full_path = os.path.join(data_directory, filename)
    
    with open(full_path, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(['Agent Name','Round','Choice','Score'])

        for i in range(iterations):
            agent_a_choice = agent_a.decide_action(game_history, opponent_score=agent_b.config.score)
            agent_b_choice = agent_b.decide_action(game_history, opponent_score=agent_a.config.score)
            print(f"Iteration {i+1}: Agent A chooses {agent_a_choice}, Agent B chooses {agent_b_choice}")

            round_result = {'Agent A': agent_a_choice, 'Agent B': agent_b_choice}
            game_history.append(round_result)

            key = f"{agent_a_choice}-{agent_b_choice}"
            if key in results:
                results[key] += 1

            agent_a.update_score(agent_a_choice, agent_b_choice)
            agent_b.update_score(agent_b_choice, agent_a_choice)

            # Log the choices and scores after each round
            writer.writerow([agent_a.config.name, i+1, agent_a_choice, agent_a.config.score])
            writer.writerow([agent_b.config.name, i+1, agent_b_choice, agent_b.config.score])
    
    if agent_a.config.agent_type == 'llm':
        save_message_history(agent_a, agent_b.config.name, llm_message_history_directory)

    if agent_b.config.agent_type == 'llm':
        save_message_history(agent_b, agent_a.config.name, llm_message_history_directory)

    plot_strategy_score(full_path, graphs_directory)
    
    return results, agent_a.config.score, agent_b.config.score

